{"meta":{"title":"冬天的雨滴 Tianyu Cui's Blog","subtitle":"A Hexo blog site with Sakura themes deployed on the Docker images and Github pages.","description":"写字楼里写字间，写字间里程序员；程序人员写程序，又拿程序换酒钱。这是一个记录了我在互联网道路上的成长的博客小站。","author":"Tianyu Cui","url":""},"pages":[{"title":"About","date":"2018-12-12T14:14:36.000Z","updated":"2020-09-09T14:48:10.463Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[冬天的雨滴] 与&nbsp; &nbsp;雨滴君&nbsp; （ Mr.Raindrop ） 对话中... bot_ui_ini()","keywords":"我的情报"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"Donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-09-09T14:50:40.483Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"Book","date":"2019-02-10T13:32:48.000Z","updated":"2020-09-09T14:49:56.588Z","comments":false,"path":"book/index.html","permalink":"/book/index.html","excerpt":"","text":"","keywords":null},{"title":"Comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-09-09T14:50:22.666Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"Music","date":"2018-12-20T15:14:28.000Z","updated":"2020-09-09T14:50:55.216Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"Links","date":"2018-12-19T15:11:06.000Z","updated":"2022-05-06T12:07:39.632Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"Picture","date":"2019-01-04T14:53:25.000Z","updated":"2020-09-09T14:52:33.395Z","comments":false,"path":"picture/index.html","permalink":"/picture/index.html","excerpt":"","text":"2019-10-29 英国 伦敦 论文发表：去英国伦敦参加了 IPCCC 2019 (38th IEEE International Performance Computing and Communications Conference) 国际会议。 &nbsp;&nbsp; &nbsp;&nbsp;","keywords":"图片展览馆"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"Statistics","date":"2020-08-28T12:16:53.909Z","updated":"2020-08-28T12:16:53.907Z","comments":true,"path":"statistics/index.html","permalink":"/statistics/index.html","excerpt":"","text":""},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"Blog-info","date":"2019-01-04T14:53:25.000Z","updated":"2022-04-28T07:25:13.001Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"1 介绍 Introduction为了督促我在研究生学习期间努力拼搏奋斗，在2020年9月1日，我作死地投入了博客网站的行列，也从此开启了自己的博客写作生活。我希望这个决定能帮助我不断地学习和进步，也希望它能成为记录我成长的一个见证人。 其实早在一年前我就已经搭建了一个简单的博客，但是由于写论文等种种原因（没错都是偷懒的借口）博文列表里只有1篇 Hexo 自带的《Hello World》。 于是趁着突如其来的疫情导致的假期时间，我又开始重新折腾起了我的夭折的博客计划。 我将在这里记录和分享我的整个博士研究生期间的学习和生活，也会收集我在互联网海洋中向其他大佬学习的知识和技术。具体而言，博客的文章主要包括了： 技术 技术｜科研 与我的科研工作相关的工程和技术 技术｜兴趣 课外的感兴趣的工程和技术 技术｜爬坑 解决之前遇到的问题的爬坑备忘录 笔记 笔记｜知识 对学习和工作有帮助的知识笔记 笔记｜学术 学术论文的笔记总结 笔记｜生活 成长和生活中的点滴记录 其余的杂七杂八则是我的一些生活乐趣的收藏，比如番剧等等。 希望我的分享能够对你有所帮助，也希望当几年过后这里将充满了我的所有回忆和收获。如果你也是志同道合的好友，欢迎在留言板给我留言或者在友人帐下交换友链。让我们一起在这条道路上努力拼搏！ 2 博客搭建 Approach我的博客网站是依赖Docker容器中的Hexo和Sakura主题搭建的，并部署在Github Page上以承载实现内容展示。 使用Docker容器是因为它能够快速地完成博客环境安装或移植博客，并且也让我不必在主机安装平时不用的node.js。使用Hexo是因为它是一个简洁且方便的博客平台，并且能够配合Github Page使我节省了购买服务器的零花钱。使用Sakura主题是因为它虽然繁复，但是拥有更多的动态功能和交互，最主要还是因为它符合我喜欢的画风。 如果你想了解我的博客网站搭建的全部细节，那么请观看我的以下几篇文章： #01 「Hexo博客搭建」Docker-Hexo搭建属于你自己的博客 #02 「Sakura主题使用」Hexo-Sakura主题的安装和使用教程 #03 「Sakura主题美化与修改#01」Hexo-Sakura主题首页的美化和修改 #04 「Sakura主题美化与修改#02」Hexo-Sakura主题全站字体更换和修复分类页文章图片压缩 #05 「Sakura主题美化与修改#03」Hexo-Sakura主题添加你的学习计划书签库 #06 「Sakura主题美化与修改#04」Hexo-Sakura主题添加你的照片墙 #07 「Sakura主题美化与修改#05」Hexo-Sakura主题添加你的站点统计信息 #08 「Sakura主题美化与修改#06」Hexo-Sakura主题在评论区利用QQ邮箱拉取QQ头像 3 感谢 Acknowledgements最后，感谢以下平台或博主的分享为我搭建博客时所提供的支持或帮助: [1] 文档|Hexo https://hexo.io/zh-cn/docs/[2] ipple1986/hexo - Ducker Hub https://hub.docker.com/r/ipple1986/hexo[3] Github Page https://pages.github.com/[4] Hexo-Theme-Sakura https://github.com/honjun/hexo-theme-sakura[5] jsDelivr https://www.jsdelivr.com/[6] 樱花庄的白猫 Mashiro https://2heng.xin/[7] 雾时之森 Mario https://m1314.cn/[8] cungudafa的博客_CSDN博客 cungudafa https://blog.csdn.net/cungudafa[9] Sakura主题美化 wallleap https://mp.weixin.qq.com/s/OAyOA28-bTJLE6aKtzpoqg[10] 流年，谁给过的倾城 Yremp https://yremp.live/[11] Uncle_drew https://cndrew.cn/","keywords":"我的博客"},{"title":"Bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-08-29T07:19:48.089Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"IPv4/IPv6过度技术简介","slug":"Knowledge-IPv6-tunnel-20220611","date":"2022-06-11T13:49:00.000Z","updated":"2022-06-11T13:57:04.000Z","comments":true,"path":"Knowledge-IPv6-tunnel-20220611.html","link":"","permalink":"/Knowledge-IPv6-tunnel-20220611.html","excerpt":"","text":"1 前言IPv4/IPv6过渡技术主要包括双栈技术、隧道技术和协议翻译技术。 2 双栈技术双栈技术在公共的物理层之上，保证 IPv4 和 IPv6 的双协议实现，它避免了隧道的复杂性和其他影响的安全因素。具有双栈协议的节点可以收发两 种 IP 协议的数据包分组。 3 协议翻译技术协议翻译技术，即通过在用于路由器和网关的较低层进行地址转换，通过对应的 IPv6 和 IPv4 地址池和映射表，完成 IPv6 与 IPv4 的地址相互转换的过程。 4 隧道技术隧道技术，IPv6/IPv4 隧道技术是利用了 IPv4 的基础结构，以 IPv4 来承载封装 IPv6 数据，从而实现 IPv6 数据报在 IPv4 网络中传递。IPv4 头部的协议(Protocol)字段可以指示其上层的封装协议，承载 IPv6 时的 Protocol 字段值为 41。隧道具体又可以分为 Automatic Tunnel 和 Configured Tunnel，即自动隧道和手工配置隧道。 4.1 自动隧道（Automatic Tunnel）1）6to4(Connection of IPv6 Domains via IPv4 Clouds)的 IPv6 地址使用固定的前缀 2002:/16。6to4 技术通过使用 6to4 路由器(6to4 Router)和多个 6to4中继(6to4 Relay Router)完成隧道的数据包交互。在隧道入口通过 6to4 Router进行封装，经过多个 6to4 Relay Router 最终在对端的 6to4 Router 上完成解封。 2）6over4(Transmission of IPv6 over IPv4 Domains without Explicit Tunnels) 隧道利用 IPv4 组播机制实现自动隧道。通过 ND 协议对目的 IPv6 地址进行寻址，寻找在组播域中拥有 6over4 接口的被请求的 IPv6 地址。接口返回包含 IPv4 地址的应答报文，最终实现对端 IPv4 地址的获得。 3）Teredo(Tunneling IPv6 over UDP through Network Address Translation)使用固定的地址前缀 2001:0:/32。它将 IPv6 数据包封装在 UDP 的数据包中进行交互，其 IPv6 地址中包含有源和目的 IPv4 地址信息。 4）ISATAP(Intra-Site Automatic Tunnel Addressing Protocol)即为站内自动隧道寻址协议，它将 IPv4 网络用作虚拟 IPv6 本地链路，并将每个 IPv4 地址映射到链路本地的 IPv6 地址。其固定的 IPv6 地址前缀为 fe80:5efe/96 以及 IPv4 地址共 32 位。 4.2 手工配置隧道（Configured Tunnel）手工配置隧道也被称为 6in4 隧道，需要隧道两端的节点协同完成隧道的建立工作，通过配置信息提取源和目的节点的 IPv4 地址信息，完成 IPv6 数据包在 IPv4 节点间通信。与自动隧道相比，配置隧道通常具有更高的确定性， 一般用于大型的网络区域 。 (左图IPv4 Protocol字段等于41）","categories":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}],"tags":[{"name":"IPv4/IPv6隧道","slug":"IPv4-IPv6隧道","permalink":"/tags/IPv4-IPv6隧道/"}],"keywords":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}]},{"title":"TensorFlow与PyTorch的交叉熵函数区别","slug":"Debug-tensorflow-pytorch-20220531","date":"2022-05-31T15:18:00.000Z","updated":"2022-05-31T16:01:41.000Z","comments":true,"path":"Debug-tensorflow-pytorch-20220531.html","link":"","permalink":"/Debug-tensorflow-pytorch-20220531.html","excerpt":"","text":"1 前言在复习深度学习框架之际，又拿起了TensorFlow和Pytorch的代码仔细琢磨起来。准备手写个TensorFlow和PyTorch的全连接层，然而写到PyTorch的交叉熵函数坑了大半天报错： RuntimeError: multi-target not supported at /pytorch/torch/lib/THCUNN/generic/ClassNLLCriterion.cu 百思不得其解，然而最后才发现原来是TensorFlow和PyTorch的交叉熵函数的构造完全不同。 2 TensorFlow全连接模型手写TensorFlow全连接模型 import numpy as np import tensorflow as tf from sklearn.metrics import accuracy_score input_dim = 5 hidden1_dim = 16 hidden2_dim = 8 output_dim = 2 lr = 0.001 n_epoch = 200 data = np.random.rand(2, 5) labels = np.array([[1.0, 0.0], [0.0, 1.0]]) data.astype(np.float32) labels.astype(np.float32) x = tf.placeholder(tf.float32, shape=(None, 5)) y = tf.placeholder(tf.float32, shape=(None, 2)) x = tf.layers.dense(x, hidden1_dim, activation=tf.nn.relu) x = tf.layers.dense(x, hidden2_dim, activation=tf.nn.relu) logits = tf.layers.dense(x, output_dim, activation=tf.nn.softmax) loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y, logits=logits)) opt = tf.train.AdamOptimizer(learning_rate=lr).minimize(loss) sess = tf.Session() init_op = tf.global_variables_initializer() sess.run(init_op) for i in range(n_epoch): _, predicts, loss_val = sess.run([opt, logits, loss], feed_dict={x: data, y: labels}) preds = np.ones_like(predicts) preds[predicts &lt; 0.5] = 0 acc_metric = accuracy_score(labels, preds) print(&quot;Epoch:&quot;, i + 1, &quot;loss:&quot;, loss_val, &quot;acc: &quot;, acc_metric) 可以看到在TensorFlow中计算loss时交叉熵函数的label直接输入的是one-hot编码的标签值 labels = np.array([[1.0, 0.0], [0.0, 1.0]]) # one-hot labels loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y, logits=logits)) 3 PyTorch全连接模型手写PyTorch全连接模型 import torch import torch.nn as nn import torch.nn.functional as F import torch.optim as optim import numpy as np input_dim = 5 hidden1_dim = 16 hidden2_dim = 8 output_dim = 2 lr = 0.001 n_epoch = 200 data = np.random.rand(2, 5) labels = np.array([1, 0]) class Net(nn.Module): def __init__(self): super(Net, self).__init__() self.fc1 = nn.Linear(in_features=input_dim, out_features=hidden1_dim) self.fc2 = nn.Linear(in_features=hidden1_dim, out_features=hidden2_dim) self.fc3 = nn.Linear(in_features=hidden2_dim, out_features=output_dim) def forward(self, x): x = F.relu(self.fc1(x)) x = F.relu(self.fc2(x)) x = F.softmax(self.fc3(x)) return x net = Net() criterion = nn.CrossEntropyLoss() optimizer = optim.Adam(net.parameters(), lr=0.001) for epoch in range(n_epoch): inputs = torch.tensor(data, dtype=torch.float32) labels = torch.tensor(labels, dtype=torch.int64) predicts = net(inputs) loss = criterion(predicts, labels) loss.backward() optimizer.step() preds = torch.argmax(predicts, dim=1) acc_metric = accuracy_score(labels, preds) print(&quot;Epoch: &quot;, epoch + 1, &quot;loss: &quot;, loss.item(), &quot;acc: &quot;, acc_metric) 而在PyTorch中交叉熵函数的labels直接是int64类型的整数标签，并不需要one-hot处理 labels = np.array([1, 0]) # int64 criterion = nn.CrossEntropyLoss() loss = criterion(predicts, labels) 4 总结虽然PyTorch比TensorFlow的代码简洁了许多，尤其是在模型建立的代码部分，然而PyTorch在像nn.CrossEntropyLoss()一些基本的函数代码上与TensorFlow却有很大的区别，在手写代码时一定要注意。","categories":[{"name":"技术|爬坑","slug":"技术-爬坑","permalink":"/categories/技术-爬坑/"}],"tags":[{"name":"TensorFlow, PyTorch","slug":"TensorFlow-PyTorch","permalink":"/tags/TensorFlow-PyTorch/"}],"keywords":[{"name":"技术|爬坑","slug":"技术-爬坑","permalink":"/categories/技术-爬坑/"}]},{"title":"NLP语言模型（Language Model）","slug":"Knowledge-lm-20220526","date":"2022-05-26T15:45:00.000Z","updated":"2022-05-26T16:09:57.000Z","comments":true,"path":"Knowledge-lm-20220526.html","link":"","permalink":"/Knowledge-lm-20220526.html","excerpt":"","text":"1 简介语言模型起源于语音识别(speech recognition)，输入一段音频数据，语音识别系统通常会生成多个句子作为候选，究竟哪个句子更合理？就需要用到语言模型对候选句子进行排序。如今语言模型的应用范围早已扩展到机器翻译、信息检索、问答、文摘等众多NLP领域。 语言模型是这样一个模型：对于任意的词序列，它能够计算出这个序列是一句话的概率。举俩例子就明白了，比如词序列A：“知乎|的|文章|真|水|啊”，这个明显是一句话，一个好的语言模型也会给出很高的概率，再看词序列B：“知乎|的|睡觉|苹果|好快”，这明显不是一句话，如果语言模型训练的好，那么序列B的概率就很小很小。 我们可以根据概率论中的链式法则(chain rule)把 展开： 如果能计算 ，那么就能轻松得到 ，所以在文献中我们经常看到语言模型的另一种等价定义：能够计算 的模型就是语言模型。 从文本生成角度来看，我们也可以给出如下的语言模型定义：给定一个短语(一个词组或一句话)，语言模型可以生成(预测)接下来的一个词。 2 N-gram语言模型以N=3的tri-gram语言模型为例，它使用二阶马尔可夫假设， ，对于 ，如何得到它的概率值呢？答案还是数数！ 其中count()表示在训练集中出现的次数。总结一下，N-gram语言模型有两个要点： 使用N-1阶马尔可夫假设简化后验概率 ，提高模型的泛化能力 使用数数法计算后验概率 3 前馈神经网络语言模型(FeedForward Neural Network Language Models)通过结合词向量(word embedding)和前馈神经网络来解决上面两个问题： 每个词用低维稠密向量表示，这就使得语义相似的词对应的向量在空间中相邻成为可能 语言模型归根到底是要计算 ，(前馈)神经网络强大的学习能力很适合拟合概率分布，并且 所依赖的上下文信息(context)也会比N-gram中的更长。 FFNNLM: 从上图中可以看出网络结构很简单，将 前n-1个词的向量进行拼接作为网络输入，经过一次非线性变换，最后输出字典中每个词的概率作为预测结果。 4 循环神经网络语言模型(RNN Language Models)从方法创新角度来看，从FFNNLM到RNNLM，似乎只是模型上的普通过渡：用RNN模型替换了FFNN，或者是再用LSTM替换RNN。然而，在这看似平平无奇的模型迭代更新之下，一场新的方法论革命正在悄悄地酝酿、发酵。 2015年Andrew M. Dai和Quoc V. Le在论文提出了对LSTM使用语言模型任务进行预训练，在下游任务微调的思路。具体来讲，Dai设计了两个预训练任务：语言模型和序列自编码。语言模型不必多讲，序列自编码任务的含义是使用LSTM网络对序列 进行编码，再解码得到 的过程。 预训练得到的LSTM模型，再用带标签的数据集微调，在多个情感分类/文本分类任务上得到了SOTA的结果 5 GPT系列2017年是NLP领域的大年，这一年Transformer横空出世，强大的模型拟合能力迅速席卷了sequence-to-sequence的各项任务，Transformer Encoder主攻特征表示，Transformer Decoder擅长文本生成，二者合则天下无敌，分则各自为王。 首先登场的是GPT-1模型，在规模约5GB的数据集上，使用Transformer Decoder替换RNN进行语言模型任务，然后在下游任务对预训练好的模型进行微调 GPT-2登场了，预训练数据集由5GB扩大到了40GB(并且足够diverse)，模型参数由1.1亿扩大到15亿，这一次，作者彻底按捺不住了，直接去掉了微调阶段，只分析预训练得到的GPT-2在下游任务的效果(zero-shot) GPT-3参数量比GPT-2足足大了100多倍","categories":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}],"tags":[{"name":"Language Model","slug":"Language-Model","permalink":"/tags/Language-Model/"}],"keywords":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}]},{"title":"网络安全、网络通信领域会议时间","slug":"Scholar-conftime-20220524","date":"2022-05-24T15:33:00.000Z","updated":"2022-05-24T16:15:54.000Z","comments":true,"path":"Scholar-conftime-20220524.html","link":"","permalink":"/Scholar-conftime-20220524.html","excerpt":"","text":"1 会议时间近3年网络空间安全、网络通信领域的会议时间列表，帮助提前掌握和规划论文投稿时间。 三个推荐会议时间链接： https://www.myhuiban.com/ https://sec-deadlines.github.io/ https://aideadlin.es/?sub=ML,CV,NLP,RO,SP,DM 截稿日期 会议名称 CCFRank 官网 文章长度 2020.01.22 ACNS CCF-C https://sites.google.com/di.uniroma1.it/ACNS2020 18页单栏 2020.02.07 SIGCOMM CCF-A http://conferences.sigcomm.org/sigcomm/2020/ 双栏12页 2020.02.17 IWQoS CCF-B https://iwqos2020.ieee-iwqos.org/ 双栏10页 2020.02.19 DIMVA CCF-C https://dimva2020.campus.ciencias.ulisboa.pt/index.html 单栏20页 2020.02.29 APWeb-WAIM CCF-C http://www.tjudb.cn/apwebwaim2020/ 单栏15页 2020.03.01 ISCC CCF-C https://conferences.imt-atlantique.fr/iscc2020/ 双栏7页 2020.03.15 ACISP CCF-C http://nsclab.org/acisp2020/ 单栏16页 2020.04.06 S&amp;P Poster 2020 https://www.ieee-security.org/TC/SP2020/cfposters.html 双栏2页 2020.04.07 RAID CCF-B https://raid2020.org/ 2020.04.17 ESORICS 2020 CCF-B https://www.surrey.ac.uk/esorics-2020 单栏16页 2020.04.30 KSEM CCF-C http://ksem2020.org/ 单栏12页 2020.04.30 ICANN CCF-C https://e-nns.org/icann2020/ 单栏10-12页 2020.05.04 CCS CCF-A https://www.sigsac.org/ccs/CCS2020/ 双栏12页 2020.05.08 ICICS CCF-C http://icics2020.compute.dtu.dk/ 单栏16页 2020.05.22 NSPW CCF-C https://www.nspw.org/2020 双栏6页到15页 2020.05.22 NDSS CCF-B https://www.ndss-symposium.org/ndss-2021/call-for-papers/ 双栏13页 2020.05.22 AsiaCrypt CCF-B https://asiacrypt.iacr.org/2020/ 不超过30页 2020.05.26 ICNP CCF-B https://icnp20.cs.ucr.edu/ 不超过10页 2020.05.29 SRDS CCF-B https://srds-conference.org/index-real.html 双栏10页 2020.05.29 Globecom CCF-C https://globecom2020.ieee-globecom.org/ 2020.06.02 IMC CCF-B https://conferences.sigcomm.org/imc/2020/ 不超过13页 2020.06.14 ICDF2C 2020 CCF-C https://icdf2c.org/ 双栏13页 2020.06.15 CollaborateCom CCF-C https://collaboratecom.org/ 单栏 长文10-20页 2020.06.16 ACASC CCF-B https://www.acsac.org/ 双栏10页 2020.06.18 USENIX Security 2021 CCF-A https://www.usenix.org/conference/usenixsecurity21 双栏13页 2020.06.25 SecureComm CCF-C http://securecomm.org/ 单栏18页 双盲评审 2020.06.26 HotNets CCF-C http://conferences.sigcomm.org/hotnets/2020/ 双栏6页 2020.06.28 ISC 2020 CCF-C http://isc2020.petra.ac.id/ 最多单栏18页 2020.06.29 ACML CCF-C http://www.acml-conf.org/2020/ 单栏16页 2020.06.29 CoNEXT CCF-B https://conferences2.sigcomm.org/co-next/2020/ 双栏12页 2020.07.01 SIGCOMM POSTER CCF-A https://conferences.sigcomm.org/sigcomm/2020/cf-posters.html 摘要不超过2页，整体3页 2020.07.03 LCN 2020 CCF-C https://www.ieeelcn.org/ full paper：双栏8-12页 2020.07.15 MASS CCF-C http://iitr.ac.in/mass2020/ 9页 2020.07.15 ICPR 2021 CCF-C https://www.icpr2020.it 双栏8页 2020.07.15 IPCCC CCF-C https://www.ipccc.org/ 双栏8页 2020.07.29 Trustcom CCF-C http://www.ieee-trustcom.org/TrustCom2020/ 双栏8页 2020.07.31 NDSS CCF-B https://www.ndss-symposium.org/ndss-2021/call-for-papers/ 双栏13页 2020.08.14 CHINACOM 2020 EI https://chinacom.org/ 长文：单栏10-20页，短文：单栏6-10页 2020.08.15 INFOCOM 2021 CCF-A https://infocom2021.ieee-infocom.org/ 10页双栏 2020.08.28 ICISC 2020 IIE-C http://www.icisc.org/ 最多单栏12页 2020.08.30 INSCRYPT 2020 IIE-C https://conf.jnu.edu.cn/ 单栏20页 2020.09.01 HPCC CCF-C https://hpccsystems.com/community/events/hpcc-systems-summit-2020 双栏八页 2020.09.17 NSDI CCF-B https://www.usenix.org/conference/nsdi21/call-for-papers 双栏12页 2020.09.24 FC 2021 CCF-C http://fc21.ifca.ai/ 单栏15页 2020.10.14 DFRWS EU CCF-C https://dfrws.org/conferences/dfrws-eu-2021/ 双栏10页 2020.10.15 USENIX Security 2021 CCF-A https://www.usenix.org/conference/usenixsecurity21 双栏13页 2020.10.19 WWW 2021 CCF-A https://www2021.thewebconf.org/ 双栏8-12页 2020.10.23 PAM CCF-C https://www.pam2021.b-tu.de/ 单栏12页 2020.10.30 ICC CCF-C https://icc2021.ieee-icc.org/ 双栏6页 2020.12.03 S&amp;P 2021 CCF-A http://www.ieee-security.org/TC/SP2021/ 18页双栏 2020.12.07 PAKDD CCF-C https://pakdd2021.org/ 单栏12页 2020.12.11 DSN 2021 CCF-B http://dsn2021.ntu.edu.tw/ 双栏11页 2020.12.11 AisaCCS 2021 CCF-C https://asiaccs2021.comp.polyu.edu.hk/ 最多双栏12页 2020.12.18 ESWC 2021 CCF-C https://2021.eswc-conferences.org/ 最多单栏16页 2020.12.30 WoWMoM 2021 CCF-C http://wowmom2021.iit.cnr.it/call_for_papers.html 双栏10页 2021.01.12 ESORICS 2021 CCF-B https://esorics2021.athene-center.de/call-for-papers.php 单栏16页 2021.02.12 ICCS IIE-B https://www.iccs-meeting.org/iccs2021/ 单栏14页 2021.01.20 CCS 2021 CCF-A https://www.sigsac.org/ccs/CCS2021/call-for-papers.html 双栏12页 2021.01.21 IFIP Networking 2021 CCF-C https://networking.ifip.org/2021/call-for-papers 最多双栏9页 2021.01.27 ISIT IIE-B https://2021.ieee-isit.org/ 不超过5页 2021.01.27 SIGCOMM 2021 CCF-A http://conferences.sigcomm.org/sigcomm/2021/ 双栏12页 2021.02.04 USENIX Security 2021 CCF-A https://www.usenix.org/conference/usenixsecurity21 双栏13页 2021.02.10 IJCNN 2021 CCF-C https://www.ijcnn.org/paper-submission-2021 双栏8页 2021.02.15 2021.02.25 SACMAT 2021 CCF-C http://sacmat.dista.uninsubria.it/2021/about.php 双栏12页 2021.02.15 2021.02.25 ACISP 2021 CCF-C https://data61dsslab.github.io/acisp2021/ 单栏16页 2021.02.19 2021.03.05 ICCCN 2021 CCF-C http://www.icccn.org/icccn21/call-for-papers/index.html 双栏9页 2021.02.22 IWQOS 2021 CCF-B https://iwqos2021.ieee-iwqos.org/authors/call-for-symposium-papers/ 双栏10页 2021.02.23 DIMVA 2021 CCF-C https://dimva2021.campus.ciencias.ulisboa.pt/cfp.html 单栏20页 2021.02.25 SOUPS 2021 CCF-C https://www.usenix.org/conference/soups2021/call-for-papers 双栏12页 2021.03.07 DFRWS USA 2021 CCF-C https://dfrws.org/conferences/dfrws-usa-2021/ 双栏10页 2021.03.10 NSDI 2022 CCF-B https://www.usenix.org/conference/nsdi22/call-for-papers 双栏12页 2021.03.31 APWeb-WAIM CCF-C http://www.apweb-waim2021.com/ 单栏15页 2021.03.15 2021.03.31 APWeb-WAIM 2021 CCF-C http://139.159.245.147/submission/CallForPapers 单栏15页 2021.03.15 2021.03.31 SecureComm 2021 CCF-C https://securecomm.eai-conferences.org/2021/ 单栏10-20页 2021.04.01 RAID 2021 CCF-B https://raid2021.org/call-for-papers/#important-dates 双栏12页 2021.03.29 2021.04.06 IWSEC 2021 IIE-C https://www.iwsec.org/2021/index.html 单栏16页 2021.03.15 2021.04.15 ICANN 2021 CCF-C https://e-nns.org/icann2021/call-for-papers-2/ 单栏12页 2021.03.15 2021.04.30 KSEM 2021 CCF-C http://www.cloud-conf.net/ksem21/submission.html 单栏12页 2021.03.20 2021.04.30 Trustcom 2021 CCF-C https://trustcom2021.sau.edu.cn/callforpapers.jsp?urltype=tree.TreeTempUrl&amp;wbtreeid=1002 双栏8页 2021.04.02 ECMLPKDD 2021 CCF-B https://2021.ecmlpkdd.org/?page_id=1599 单栏16页 2021.04.15 S&amp;P 2022 CCF-A https://www.ieee-security.org/TC/SP2022/index.html 双栏13页 2021.04.16 2021.04.23 SRDS 2021 CCF-B https://srds-conference.org/ 双栏10页 2021.04.15 2021.05.15 MASS 2021 CCF-C https://eng.auburn.edu/conference/ieee-mass2021/ 双栏9页 2021.04.15 2021.05.28 GLOBECOM 2021 CCF-C https://globecom2021.ieee-globecom.org/authors/call-symposium-papers 双栏6页 2021.04.23 2021.05.07 CollaborateCom 2021 CCF-C https://collaboratecom.eai-conferences.org/2021/submission/ 单栏12页 2021.05.01 2021.05.31 SciSec 2021 IIE-C https://scisec.org/ 单栏15页 2021.05.08 2021.05.31 LCN 2021 CCF-C https://www.ieeelcn.org/ 双栏6页 2021.05.06 CCS 2021 CCF-A https://www.sigsac.org/ccs/CCS2021/call-for-papers.html 双栏12页 2021.05.11 ICICS 2021 CCF-C https://icics.cn/Home.html 单栏16页 2021.05.12 ESORICS 2021 CCF-B https://esorics2021.athene-center.de/call-for-papers.php 单栏16页 2021.05.14 ACML 2021 Journal CCF-C http://www.acml-conf.org/2021/calls/papers/ 单栏20页 2021.05.15 MASS 2021 CCF-C https://eng.auburn.edu/conference/ieee-mass2021/ 双栏9页 2021.05.15 ISCC 2021 CCF-C https://iscc2021.unipi.gr 双栏7页 2021.05.16 ICDF2C 2021 CCF-C https://icdf2c.eai-conferences.org/2021/# 单栏12-15页 2021.05.20 Inscrypt 2021 IIE-C https://cst.qd.sdu.edu.cn/inscrypt_2021/ 单栏20页 2021.05.21 NDSS 2022 CCF-B https://www.ndss-symposium.org/ndss2022/call-for-papers/ 双栏13页 2021.05.21 NSPW 2021 CCF-C https://www.nspw.org/2021 双栏6-15页 2021.05.24 ICNP 2021 CCF-B https://icnp21.cs.ucr.edu/cfp.html 双栏10页 2021.05.26 CIKM 2021 CCF-B https://www.cikm2021.org 双栏10页 2021.05.26 IMC 2021 CCF-B https://conferences.sigcomm.org/imc/2021/ 双栏13页 2021.05.27 Asiacrypt 2021 CCF-B https://asiacrypt.iacr.org/2021/ 单栏30页 2021.06.08 Usenix Security 2022 CCF-A https://www.usenix.org/conference/usenixsecurity22/call-for-papers 双栏13页 2021.06.23 ACSAC 2021 CCF-B https://www.acsac.org/2021/submissions/papers/ 双栏10页 2021.06.25 HotNets 2021 CCF-C http://conferences.sigcomm.org/hotnets/2021/cfp.html 双栏6页 2021.06.25 ACML 2021 Conference CCF-C http://www.acml-conf.org/2021/calls/papers/ 单栏16页 2021.06.28 CoNext 2021 CCF-B https://conferences2.sigcomm.org/co-next/2021/#!/home 双栏12页 2021.06.30 2021.07.14 IPCCC 2021 CCF-C https://www.ipccc.org/ipccc2021/main.php?page=1 双栏8页 2021.07.20 ICTAI 2021 CCF-C https://ictai.computer.org/ 双栏8页 2021.06.27 2021.07.21 ISC 2021 CCF-C http://isc2021.petra.ac.id/callforpaper 单栏16页 2021.07.23 MSN 2021 CCF-C https://ieee-msn.org/2021/ 双栏8页 2021.07.23 NDSS 2022 CCF-B https://www.ndss-symposium.org/ndss2022/call-for-papers/ 双栏13页 2021.07.30 AsiaCCS 2022 CCF-C https://asiaccs2022.conferenceservice.jp/ 双栏12页 2021.07.31 INFOCOM 2022 CCF-A https://infocom2022.ieee-infocom.org/ 双栏10页 2021.06.01 2021.08.01 MILCOM 2021 IIE-B https://milcom2021.milcom.org 双栏6页 2021.08.09 WSDM 2022 CCF-B http://www.wsdm-conference.org/2022/calls/ 双栏8页 2021.08.19 S&amp;P 2022 CCF-A https://www.ieee-security.org/TC/SP2022/index.html 双栏13页 2021.09.03 ACNS 2022 CCF-C https://sites.google.com/di.uniroma1.it/acns2022/home 单栏18页 2021.09.08 AAAI 2022 CCF-A https://aaai.org/Conferences/AAAI-22/submission-guidelines/ 双栏7页 2021.09.01 2021.09.15 HPCC 2021 CCF-C http://www.ieee-hpcc.org/2021/ 双栏8页 2021.08.27 2021.09.17 ICISC 2021 IIE-C https://www.icisc.org/ 单栏20页 2021.09.13 FC 2022 CCF-C https://fc22.ifca.ai/ 双栏20页 2021.09.15 WCNC 2022 CCF-C https://wcnc2022.ieee-wcnc.org/authors/call-papers 双栏6页 2021.09.15 NSDI 2022 CCF-A https://www.usenix.org/conference/nsdi22/call-for-papers 双栏12页 2021.10.03 DFRWS EU 2022 CCF-C https://dfrws.org/conferences/dfrws-eu-2022/ 双栏10页 2021.10.12 Usenix Security 2022 CCF-A https://www.usenix.org/conference/usenixsecurity22/call-for-papers 双栏13页 2021.10.15 AISTATS 2022 CCF-C https://aistats.org/aistats2022/cfp.html 双栏8页 2021.10.21 WWW 2022 CCF-A https://www2022.thewebconf.org/ 双栏12页 2021.10.27 PAM 2022 CCF-C https://pam2022.nl/cfp/ 单栏24页 2021.10.15 2021.11.12 IFIP wg 11.9 2022 CCF-C http://www.ifip119.org/Conferences/WG11-9-CFP-2022.pdf 单栏20页 2021.10.11 2021.11.14 ICC 2022 CCF-C https://icc2022.ieee-icc.org/ 双栏6页 2021.10.31 2021.11.15 PAKDD 2022 CCF-C http://pakdd.net/ 单栏12页 2021.11.15 SACMAT 2022 CCF-C https://sacmat.dista.uninsubria.it/2022/index.php 双栏12页 2021.11.19 AsiaCCS 2022 CCF-C https://asiaccs2022.conferenceservice.jp/ 双栏12页 2021.11.30 CSCWD 2022 CCF-C http://2022.cscwd.org/ 双栏6页 2021.11.30 PETS 2022 CCF-C https://petsymposium.org/cfp22.php 单栏15页 2021.12.02 S&amp;P 2022 CCF-A https://www.ieee-security.org/TC/SP2022/index.html 双栏13页 2021.12.09 ESWC 2022 CCF-C https://2022.eswc-conferences.org/call-for-contributions/ 单栏15页 2021.12.10 DSN 2022 CCF-B https://dsn2022.github.io/ 双栏11页 2021.12.20 MobiSys 2022 CCF-B https://sigmobile.org/mobisys/2022/ 双栏12页 2022.01.14 ACNS 2022 CCF-C https://sites.google.com/di.uniroma1.it/acns2022/home 单栏18页 2022.01.14 IJCAI 2022 CCF-A https://ijcai-22.org/calls-papers/ 双栏7页 2022.01.14 CCS 2022 CCF-A https://www.sigsac.org/ccs/CCS2022/call-for-papers.html 双栏12页 2021.12.15 2022.01.15 WoWMoM 2022 CCF-C https://computing.ulster.ac.uk/WoWMoM2022/call_for_papers.html 双栏10页 2022.01.15 SEC 2022 CCF-C https://ifipsec2022.compute.dtu.dk/cfp.html 单栏16页 2022.01.15 ISIT 2022 IIE-B https://www.isit2022.org/ 双栏5页 2022.01.17 ICPR 2022 CCF-C http://www.icpr2022.com/ 双栏6页 2022.01.21 MDM 2022 CCF-C https://mdm2022.cs.ucy.ac.cy/index.php/research-track-papers/ 双栏10页 2022.01.21 ICCS 2022 IIE-B https://www.iccs-meeting.org/iccs2022/call-for-papers/ 单栏14页 2022.01.24 ICDCS 2022 CCF-B https://icdcs2022.icdcs.org/cfp/ 双栏11页 2022.01.30 Networking 2022 CCF-C https://networking.ifip.org/2022/ 双栏9页 2022.01.31 DFRWS USA 2022 CCF-C https://dfrws.org/conferences/dfrws-usa-2022/ 双栏10页 2022.01.31 IJCNN 2022 CCF-C https://wcci2022.org/call-for-papers/ 双栏8页 2022.01.31 ESORICS 2022 CCF-B https://esorics2022.compute.dtu.dk/cfp.html 单栏16页 2022.02.01 Usenix Security 2022 CCF-A https://www.usenix.org/conference/usenixsecurity22/call-for-papers 双栏13页 2022.02.02 SIGMETRICS 2022 CCF-B https://www.sigmetrics.org/sigmetrics2022/call_for_papers.html 单栏20页 2022.02.02 SIGCOMM 2022 CCF-A http://conferences.sigcomm.org/sigcomm/2022/ 双栏12页 2022.02.04 CSF 2022 CCF-B https://www.ieee-security.org/TC/CSF2022/cfp.html 双栏12页 2022.02.07 IWQOS 2022 CCF-B https://iwqos2022.ieee-iwqos.org/ 双栏10页 2022.02.07 ACISP 2022 CCF-C https://uow-ic2.github.io/acisp2022/cfp.html 单栏20页 2022.02.10 KDD 2022 CCF-A https://www.kdd.org/kdd2022/cfpResearch.html 双栏9页 2022.02.17 SOUPS 2022 CCF-C https://www.usenix.org/conference/soups2022 双栏12页 2022.02.18 SACMAT 2022 CCF-C https://sacmat.dista.uninsubria.it/2022/index.php 双栏12页 2022.02.28 PETS 2022 CCF-C https://petsymposium.org/cfp22.php 单栏15页 2022.03.10 DIMVA 2022 CCF-C https://sites.unica.it/dimva2022/call-for-papers/ 单栏20页 2022.03.04 2022.03.11 MobiHoc 2022 CCF-B https://www.sigmobile.org/mobihoc/2022/cfp.html 双栏10页 2022.03.14 ISCC 2022 CCF-C https://iscc2022.unipi.gr/ 双栏7页 2022.03.01 2022.03.15 SEKE 2022 CCF-C ksiresearchorg.ipage.com/seke/seke22.html 双栏6页 2022.02.20 2022.03.20 ICCCN 2022 CCF-C http://www.icccn.org/ 双栏9页 2022.03.31 RAID 2022 CCF-B https://raid2022.cs.ucy.ac.cy/call.html 双栏12页 2022.04.01 S&amp;P 2023 CCF-A https://www.ieee-security.org/TC/SP2023/cfpapers.html 双栏13页 2022.03.22 2022.04.05 APWeb-WAIM 2022 CCF-C http://apweb-waim2022.com/callsforpaper 单栏15页 2022.03.26 2022.04.06 IWSEC 2022 IIE-C https://www.iwsec.org/2022/index.html 单栏20页 2022.03.28 2022.04.06 ECMLPKDD 2022 CCF-B https://2022.ecmlpkdd.org/index.php/research-and-ads-tracks/ 单栏16页 2022.03.21 2022.04.11 ICICS 2022 CCF-C https://icics2022.cyber.kent.ac.uk/submission.php 单栏16页 2022.04.03 2022.04.13 ICANN 2022 CCF-C https://e-nns.org/icann2022/ 单栏12页 2022.04.03 2022.04.17 SecureComm 2022 CCF-C https://securecomm.eai-conferences.org/2022/ 单栏11-16页 2022.04.20 NSDI 2023 CCF-B https://www.usenix.org/conference/nsdi23 双栏12页 2022.04.08 2022.04.24 LCN 2022 CCF-C https://www.ieeelcn.org/ 双栏8页 2022.03.15 2022.04.25 KSEM 2022 CCF-C https://ksem22.smart-conf.net/ 单栏12页 2022.04.11 2022.04.25 SRDS 2022 CCF-B https://srds-conference.org/ 双栏10页 2022.05.02 CCS 2022 CCF-A https://www.sigsac.org/ccs/CCS2022/call-for-papers.html 双栏12页 2022.05.12 NDSS 2023 CCF-B https://www.ndss-symposium.org/ndss2023-call-for-papers/ 双栏13页 2022.05.18 IMC 2022 CCF-B https://conferences.sigcomm.org/imc/2022/ 双栏13页 2022.05.16 2022.05.19 CIKM 2022 CCF-B https://www.cikm2022.org/ 双栏9页 2022.05.02 2022.05.20 MASS 2022 CCF-C https://sites.google.com/view/ieee-mass-2022/home 双栏9页 2022.04.15 2022.05.22 GLOBECOM 2022 CCF-C https://globecom2022.ieee-globecom.org/ 双栏6页 2022.05.22 ESORICS 2022 CCF-B https://esorics2022.compute.dtu.dk/cfp.html 单栏16页 2022.05.26 ICNP 2022 CCF-B https://icnp22.cs.ucr.edu/index2.html 双栏10页 2022.05.26 ACML 2022 Journal CCF-C http://www.acml-conf.org/2022/cfp.html#dates 单栏20页 2022.05.27 Asiacrypt 2022 CCF-B https://asiacrypt.iacr.org/2022/ 单栏30页 2022.04.25 2022.05.27 SciSec 2022 IIE-C https://scisec.org/ 单栏15页 2022.05.29 MILCOM 2022 IIE-B https://milcom2022.milcom.org/ 双栏6页 2022.05.22 2022.05.30 NSPW 2022 CCF-C https://www.nspw.org/2022 双栏6-15页 2022.05.01 2022.06.15 CollaborateCom 2022 CCF-C https://collaboratecom.eai-conferences.org/2022/call-for-papers/ 单栏12页 2022.06.23 ACML 2022 Conference CCF-C http://www.acml-conf.org/2022/cfp.html#dates 单栏16页 2022.06.29 ACSAC 2022 CCF-B https://www.acsac.org/ 双栏10页 2022.06.29 CoNext 2022 CCF-B https://conferences2.sigcomm.org/co-next/2022/#!/cfp 双栏12页 2022.06.30 IPCCC 2022 CCF-C https://www.ipccc.org/ipccc2022/main.php?page=1 双栏8页 2022.07.01 Trustcom 2022 CCF-C http://www.ieee-hust-ncc.org/2022/TrustCom/index.html 双栏8页 2022.07.01 ICDF2C 2022 CCF-C https://icdf2c.eai-conferences.org/2022/ 单栏12页 2022.07.01 MSN 2022 CCF-C https://ieee-msn.org/2022/ 双栏8页 2022.07.29 NDSS 2023 CCF-B https://www.ndss-symposium.org/ndss2023-call-for-papers/ 双栏13页 2022.08.19 S&amp;P 2023 CCF-A https://www.ieee-security.org/TC/SP2023/cfpapers.html 双栏13页 2022.09.01 ASIACCS 2023 CCF-C https://asiaccs2023.org/ 双栏12页 2022.09.08 ACNS 2023 CCF-C https://sulab-sever.u-aizu.ac.jp/ACNS2023/ 单栏20页 2022.09.20 NSDI 2023 CCF-B https://www.usenix.org/conference/nsdi23 双栏12页 2022.12.02 S&amp;P 2023 CCF-A https://www.ieee-security.org/TC/SP2023/cfpapers.html 双栏13页 2023.01.12 ACNS 2023 CCF-C https://sulab-sever.u-aizu.ac.jp/ACNS2023/ 单栏20页","categories":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}],"tags":[{"name":"Conference Time","slug":"Conference-Time","permalink":"/tags/Conference-Time/"}],"keywords":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}]},{"title":"强化学习（Reinforcement Learning）简单综述","slug":"Knowledge-rl-20220523","date":"2022-05-23T15:14:00.000Z","updated":"2022-05-23T16:47:49.000Z","comments":true,"path":"Knowledge-rl-20220523.html","link":"","permalink":"/Knowledge-rl-20220523.html","excerpt":"","text":"1 策略梯度Agent通过观察当前环境的状态 ，得出当前应当执行的动作 。Agent执行完动作之后环境对应发生了改变，并且环境会给予Agent一个反馈reward 。此时又会是一个新的环境状态 ，基于本次的环境状态，Agent又会执行对应的动作…以此类推持续进行下去，直到无法继续。 在不同的状态（State）采取的动作 Action 也就是我们所说的策略 Policy 。常用符号 来表示策略。 2 蒙特卡洛树搜索（MCTS）在评估任意时刻的序列时，我们考虑的其实都是它能带来的long-term reward，就像下围棋或象棋一样，每下一步棋都要以全局为考量。在围棋和象棋的求解算法中，MCTS是一个很重要的组成部分，所以作者想到了将它应用到当前的问题。 从名字得知，这种算法属于一种蒙特卡洛方法（Monte Carlo method）——根据维基百科，也称统计模拟方法，是指使用随机数（或更常见的伪随机数）来解决很多计算问题的方法。MCTS正是这样一种基于统计模拟的启发式搜索算法，常用于游戏的决策过程。 MCTS可以无限循环，而每一次循环都由以下4个步骤构成： Selection：从根节点开始，连续选择子节点向下搜索，直至抵达一个叶节点。子节点的选择方法一般采用UCT（Upper Confidence Bound applied to trees）算法，根据节点的“胜利次数”和“游戏次数”来计算被选中的概率，保持了Exploitation和Exploration的平衡，是保证搜索向最优发展的关键。 Expansion：在叶节点创建多个子节点。 Simulation：在创建的子节点中根据roll-out policy选择一个节点进行模拟，又称为playout或者rollout。它和Selection的区别在于：Selection指的是对于搜索树中已有节点的选择，从根节点开始，有历史统计数据作为参考，使用UCT算法选择每次的子节点；Simulation是简单的模拟，从叶节点开始，用自定义的roll-out policy（可以只是简单的随机概率）来选择子节点，且模拟经过的节点并不加入树中。 Backpropagation：根据Simulation的结果，沿着搜索树的路径向上更新节点的统计信息，包括“胜利次数”和“游戏次数”，用于Selection做决策。 3 Q-learning和DQN怎样找到一个好的长期策略呢？我们先定义一个Q值 ，来表示我们在状态s下，采取某个行为 a，所能得到的最大贴现未来奖励。由于不确定性，这个奖励将是一个期望值： 这个Q值可以理解为，在这个s状态下采取了 行为后，整个episode最后可能的最大好处。之所以叫做“Q”值，是因为他代表了在s状态下采取了 行为的“Quality“。 如果这个Q值存在的话，策略就很简单：只要在每一步都选择那个Q值最大的行为就行了。 但这个Q的存在有点奇怪，如果只有现在的状态和行为，未来的状态和行为尚未发生，如何估计episode结束时的收益Q呢？答案是通过Bellman equation迭代得到！ 让我们首先看一次状态变化 ，我们可以写出状态变化前后Q值之间的迭代关系，也就是Bellman equation： 这一Bellman equation可以直观地理解为：当前状态和行为的Q值，等于即时的奖励加上下一个状态可能的最大奖励。 有了以上Q值的定义和关系，Q-learning的目标是估计Q值，获得一个Q-table： Q-learning获得Qtable的方法是通过基于Bellman equation不断迭代更新，最终收敛到准确的Q值。算法如下，其中 为learning rate。 但即便如此，我们仍然面临状态空间太大且多数状态很少被观察到，Q table的估计将花费大量时间且很难收敛。况且，对大量未观察到的可能的状态，我们也希望能够进行Q值估计。 这就是DQN要发挥的作用。神经网络（NN）十分擅长从有结构的数据中提取好的特征，因此，我们可以用NN来近似 ，以状态（如四张图)和动作为输入，输出对应的Q值。或者，另一种方式是，以状态作为输入，输入各种动作下对应的Q值，这种方法的优点是可以方便地从所有输出中找到最高的Q值，从而决定最优的动作。这两种方式的简图如下： 基于以上的分析和所设计的architecture，NN以像素值为输入，输出若干个对应不同动作的实数Q值。这实际是一个用NN实现的regression，可以用简单的误差平方作为损失函数： 其中 称为target， 称为prediction。 DQN中Q值的更新的方法变为： 对一次状态变化 &lt;s,a,r,s’&gt; ： forward pass 获得对当前状态和所有动作的Q值，即Q(s,a1)，Q(s,a2)… forward pass 获得对下一状态的最大Q值，即maxQ(s’,a’)=Q(s’,a*) 对动作a，更新target；其他动作target不变 backpropagation 依据每个动作的target和prediction，反向传播更新参数 4 Actor-Critic、PPO、DDPG、A3C算法Actor-Critic从名字上看包括两部分，演员(Actor)和评价者(Critic)。其中Actor使用我们上一节讲到的策略函数，负责生成动作(Action)并和环境交互。而Critic使用我们之前讲到了的价值函数，负责评估Actor的表现，并指导Actor下一阶段的动作。 Actor为策略函数，经常用神经网络来表示，因此称为策略网络。 Critic为评价函数，对于大部分问题， 也常常用神经网络进行逼近， 它的参数常用表示，因此Critic又称为评价网络。 PPO也是一个AC的框架，PPO改进Actor部分，也就是在策略参数更新上进行改善。 DDPG提出利用确定性策略代替随机策略。DDPG或DPG是异策略的方法，行为策略为随机策略，评估策略为确定性策略。随机策略可以探索和产生多样的行为数据，确定性策略利用这些数据进行策略的改善。 A3C算法利用多线程的方法，同时在多个线程里面分别和环境进行交互学习，每个线程都把学习的成果汇总起来，整理保存在一个公共的地方。并且定期从公共的地方把大家的齐心学习的成果拿回来，指导自己和环境后面的学习交互。","categories":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}],"tags":[{"name":"Reinforcement Learning","slug":"Reinforcement-Learning","permalink":"/tags/Reinforcement-Learning/"}],"keywords":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}]},{"title":"知识图谱（Knowledge Graph）简单综述","slug":"Knowledge-kg-20220507","date":"2022-05-07T15:33:00.000Z","updated":"2022-05-07T15:36:49.000Z","comments":true,"path":"Knowledge-kg-20220507.html","link":"","permalink":"/Knowledge-kg-20220507.html","excerpt":"","text":"1 介绍知识图谱（Knowledge Graph）主要是用于描述现实世界中的实体（区别于概念，是指客观世界中的具体实物，如张三，李四等）、概念（人们在认识世界过程中形成的对客观事物的概念化表示，如人、动物等）及事件间的客观关系。知识图谱的构建过程即从非结构化数据（图像等）或半结构化数据（网页等）中抽取信息，构建结构化数据（三元组，实体-属性-关系）的过程。最早知识图谱这一词汇由Google于2012年提出，并利用该项技术增强其搜索服务。 信息抽取（Information Extracrtion，IE）信息抽取，顾名思义抽取的是信息，那什么是信息呢？什么又是数据、知识呢？数据可以简单的理解为一种符号，其表示形式主要包括有文字、图表、语音等等，而信息则是数据所承载或表达的内容，而知识则又是对信息的整合与抽象。信息抽取是知识图谱构建的基础和前驱，其主要的研究内容包括： 实体识别。主要是命名识别，即专有名词及相关的标识（类），如：人名、地名、机构名等。 实体同指。识别不同表示的实体表示，如：缩略语、简称及指代性表示（代词、有定表示等）。 关系识别。识别实体间的关系，主要包括：实体间是否存在关系以及具体哪种关系的判断。 事件识别。将文本（主要指新闻类文本）中事件结构化（与事件的场景、主题有密切联系）。如：时间、地点、参与者、结果/现状等。 信息融合信息融合或知识的融合其是就是实体融合，也即实体对齐操作。随着大数据时代的到来，数据的来源维度不断扩大，不同结构、不同维度的数据在其自身的结构体系下是逻辑自洽的，且相互间存在一定程度的overlap，然而当我们将这些数据进行合并时就会面对实体对齐的问题，也就是同指消解问题。 信息存储信息的抽取和融合后的输出即为三元组，我们如何对三元组进行有效的存储以方便检索和调用这就涉及到数据库的选择。数据库的类型主要有：关系型数据库、图数据库、NoSQL数据库等。 知识推理自然语言处理中非常困难的一部分就是推理，无论是问答系统还是阅读理解等，目前技术只能在基于知识库的查询上获得不错的效果，而一旦涉及到推理工作，都将会变得十分困难。 基于分布式的知识语义表示的方法典型代表即Trans系列的模型，如TransE、TransR等。TransE模型的思想也比较直观，它是将每个词映射为向量，然后向量之间保持一种类比的关系，即：头实体embedding（h）+关系embedding（i）= 尾实体embedding（t）。其目标为让构成三元组的h和i尽可能的接近t，而不构成的三元组尽可能的远。 TransE模型求解过程为： Step1. 模型假设。将实体和关系之间进行向量表示； Step2. 定义打分函数来衡量关系成立的可能性。使用距离函数表征“头实体+关系”和“尾实体”接近的程度。距离越小，接近程度越高，关系成立的可能性越大； Step3. 参数估计。即实体和关系的对应向量表示。 基于知识图谱的推荐 基于异构信息网络的知识画像将物品和其每种属性值对应的实体都表示成异构信息网络的一类结点，它们之间构成各种类型的边，而不同物品间会共享某些属性对应的实体，所以会有一条经过该共享实体的meta-path将两个物品相连。因此由不同类型的元路径相连的两个物品具有一定的相似度。这类方法的优点是充分且直观地利用了知识图谱的网络结构，缺点是需要手动设计meta-path或meta-graph。同时，由于我们无法为实体不属于同一个领域的场景（例如新闻推荐）预定义meta-path或meta-graph，因此该类方法的应用受到了限制。 隐式画像。利用基于深度神经网络的嵌入embedding向量来表示物品，物品间的相似度计算基于其对应嵌入向量在向量空间中的距离。主要包括基于随机游走的图嵌入(graph embedding)和基于KG embedding两种模型。其中基于随机游走的图嵌入（graph embedding）模型即在异构信息网络图中应用基于随机游走的相关图嵌入算法即可获得电影节点的向量表示（画像），包括DeepWalk、Node2Vec、HIN2Vec等。","categories":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}],"tags":[{"name":"Knowledge Graph","slug":"Knowledge-Graph","permalink":"/tags/Knowledge-Graph/"}],"keywords":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}]},{"title":"图神经网络综述 GCN、GraphSAGE、GAT、GAE、ARGA","slug":"Knowledge-graph-20220505","date":"2022-05-05T15:58:00.000Z","updated":"2022-05-05T16:31:00.000Z","comments":true,"path":"Knowledge-graph-20220505.html","link":"","permalink":"/Knowledge-graph-20220505.html","excerpt":"","text":"1 GCNGCN方法又可以分为两大类，基于谱（spectral-based）和基于空间（spatial-based）。基于谱的方法从图信号处理的角度引入滤波器来定义图卷积，其中图卷积操作被解释为从图信号中去除噪声。基于空间的方法将图卷积表示为从邻域聚合特征信息，当图卷积网络的算法在节点层次运行时，图池化模块可以与图卷积层交错，将图粗化为高级子结构。 在基于谱的图神经网络中，图被假定为无向图，无向图的一种鲁棒数学表示是正则化图拉普拉斯矩阵，即 其中，A为图的邻接矩阵，D为对角矩阵且 正则化图拉普拉斯矩阵具有实对称半正定的性质。利用这个性质，正则化拉普拉斯矩阵可以分解为 ，其中 U是由L的特征向量构成的矩阵，A是对角矩阵，对角线上的值为L的特征值。正则化拉普拉斯矩阵的特征向量构成了一组正交基。 对图X的傅里叶变换由此被定义为 傅里叶反变换则为 现在我们可以来定义对输入信号X的图卷积操作了 现有的基于谱的图卷积网络模型有以下这些：Spectral CNN、Chebyshev Spectral CNN (ChebNet)、Adaptive Graph Convolution Network (AGCN)基于谱的图卷积神经网络方法的一个常见缺点是，它们需要将整个图加载到内存中以执行图卷积，这在处理大型图时是不高效的。 2 GraphSAGEGraphSAGE 包含采样和聚合 (Sample and aggregate)，首先使用节点之间连接信息，对邻居进行采样，然后通过多层聚合函数不断地将相邻节点的信息融合在一起。用融合后的信息预测节点标签。下图展示了 GraphSAGE 的聚合过程，采用了两层聚合层。 GraphSAGE 提供了四种聚合节点的函数：Mean aggregator: 对节点 v 进行聚合时，对节点 v 和邻域的特征向量求均值。GCN aggregator: 采用了类似 GCN 卷积的方式进行聚合，公式和 Mean aggregator 类似：LSTM aggregator: 作者任务 LSTM 有比较好的抽取特征能力，因此也使用了 LSTM 进行聚合，但是因为节点之间没有明显的顺序关系，因此会打乱之后放入 LSTM。Pooling aggregator: 先把所有邻居节点的特征向量传入一个全连接层，然后使用 max-pooling 聚合。 3 GAT图注意力网络（GAT）是一种基于空间的图卷积网络，它的注意机制是在聚合特征信息时，将注意机制用于确定节点邻域的权重。GAT的图卷积运算定义为： 4 GAE图自动编码器是一类图嵌入方法，其目的是利用神经网络结构将图的顶点表示为低维向量。典型的解决方案是利用多层感知机作为编码器来获取节点嵌入，其中解码器重建节点的邻域统计信息，如positive pointwise mutual information （PPMI）或一阶和二阶近似值。 目前基于GCN的自编码器的方法主要有：Graph Autoencoder (GAE)和Adversarially Regularized Graph Autoencoder (ARGA) 编码器： 解码器： 损失函数： 5 ARGA联合高斯分布到图表示学习中，实现隐层表示的分布监督。 生成模型编码器： 生成模型解码器： 生成模型损失函数： 鉴别模型损失函数： 对抗训练","categories":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}],"tags":[{"name":"GNNs","slug":"GNNs","permalink":"/tags/GNNs/"}],"keywords":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}]},{"title":"「Leetcode 307」线段树","slug":"Leetcode-307-20220427","date":"2022-04-27T15:29:00.000Z","updated":"2022-04-27T15:49:18.000Z","comments":true,"path":"Leetcode-307-20220427.html","link":"","permalink":"/Leetcode-307-20220427.html","excerpt":"","text":"1 题目描述给你一个数组 nums，请你完成两类查询。 其中一类查询要求 更新 数组 nums 下标对应的值 另一类查询要求返回数组 nums 中索引 left 和索引 right 之间（ 包含 ）的 nums元素的 和 ，其中 left &lt;= right 实现 NumArray 类： NumArray(int[] nums) 用整数数组 nums 初始化对象void update(int index, int val) 将 nums[index] 的值更新为 valint sumRange(int left, int right) 返回数组 nums 中索引 left 和索引 right 之间（ 包含 ）的 nums 元素的和 （即，nums[left] + nums[left + 1], ..., nums[right]） 2 题解线段树 segmentTree 是一个二叉树，每个结点保存数组 nums 在区间 [s,e] 最小值、最大值或者总和等信息。线段树可以用树也可以用数组（堆式存储）来实现。对于数组实现，假设根结点的下标为 0，如果一个结点在数组的下标为 node，那么它的左子结点下标为 node * 2 + 1，右子结点下标为 node * 2 + 2。 class NumArray { private int[] segmentTree; private int n; public NumArray(int[] nums) { n = nums.length; segmentTree = new int[nums.length * 4]; build(0, 0, n - 1, nums); } public void update(int index, int val) { change(index, val, 0, 0, n - 1); } public int sumRange(int left, int right) { return range(left, right, 0, 0, n - 1); } private void build(int node, int s, int e, int[] nums) { if (s == e) { segmentTree[node] = nums[s]; return; } int m = s + (e - s) / 2; build(node * 2 + 1, s, m, nums); build(node * 2 + 2, m + 1, e, nums); segmentTree[node] = segmentTree[node * 2 + 1] + segmentTree[node * 2 + 2]; } private void change(int index, int val, int node, int s, int e) { if (s == e) { segmentTree[node] = val; return; } int m = s + (e - s) / 2; if (index &lt;= m) { change(index, val, node * 2 + 1, s, m); } else { change(index, val, node * 2 + 2, m + 1, e); } segmentTree[node] = segmentTree[node * 2 + 1] + segmentTree[node * 2 + 2]; } private int range(int left, int right, int node, int s, int e) { if (left == s &amp;&amp; right == e) { return segmentTree[node]; } int m = s + (e - s) / 2; if (right &lt;= m) { return range(left, right, node * 2 + 1, s, m); } else if (left &gt; m) { return range(left, right, node * 2 + 2, m + 1, e); } else { return range(left, m, node * 2 + 1, s, m) + range(m + 1, right, node * 2 + 2, m + 1, e); } } }","categories":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}],"tags":[{"name":"算法","slug":"算法","permalink":"/tags/算法/"}],"keywords":[{"name":"笔记|知识","slug":"笔记-知识","permalink":"/categories/笔记-知识/"}]},{"title":"「讨论班论文阅读分享#03」Borgolte et al. S&P 2018","slug":"Paper-EnumeratingBorgolte-20220425","date":"2022-04-25T11:13:00.000Z","updated":"2022-04-25T11:49:35.000Z","comments":true,"path":"Paper-EnumeratingBorgolte-20220425.html","link":"","permalink":"/Paper-EnumeratingBorgolte-20220425.html","excerpt":"","text":"前言本文是Borgolte等人发表在S&amp;P 2018的一篇利用DNS PTR记录，在DNS反向域名解析域内实现地址枚举的代表性工作，方法继承了他们在PAM 2017利用反向枚举IPv6 PTR记录时的NXDOMAIN记录实现整个反向DNS域内的IPv6地址枚举，利用DNSSEC签名区域内不存在记录时返回NSEC和NSC3消息，实现DNSSEC签名区域内的活跃地址枚举工作。 1 PPT分享","categories":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}]},{"title":"「讨论班论文阅读分享#02」Song et al. IWQoS 2020","slug":"Paper-TowardsSong-20220423","date":"2022-04-23T03:56:00.000Z","updated":"2022-04-23T05:51:25.000Z","comments":true,"path":"Paper-TowardsSong-20220423.html","link":"","permalink":"/Paper-TowardsSong-20220423.html","excerpt":"","text":"前言本文是清华大学Song等人发表在IWQoS 2020的一篇实现目标生成算法并探测Pv6地址空间的代表性工作，方法依靠了6Tree的空间树算法，将每次划分操作由从左到右地址位改为每次寻找墒值最低的地址位，保证最后保留活跃地址密度最大的叶子节点。 1 PPT分享","categories":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}]},{"title":"「讨论班论文阅读分享#01」Gasser et al. IMC 2018","slug":"Paper-ClusterGasser-20220420","date":"2022-04-20T08:17:00.000Z","updated":"2022-04-20T08:46:14.006Z","comments":true,"path":"Paper-ClusterGasser-20220420.html","link":"","permalink":"/Paper-ClusterGasser-20220420.html","excerpt":"","text":"前言本文是Gasser等人发表在IMC 2018的一篇提供IPv6活跃地址的公开数据集的代表性工作，从公开数据集中收集全面的可扫描列表（域名、Traceroute数据），通过持续扫描提供不断更新的活跃地址集，将IPv6目标列表从数量推向质量。 1 PPT分享","categories":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"笔记|学术","slug":"笔记-学术","permalink":"/categories/笔记-学术/"}]},{"title":"「IPv6 App TLS加密流量#02」IPv6加密移动应用分析","slug":"IPv6-app-02-20220417","date":"2022-04-17T02:37:00.000Z","updated":"2022-04-20T08:16:22.670Z","comments":true,"path":"IPv6-app-02-20220417.html","link":"","permalink":"/IPv6-app-02-20220417.html","excerpt":"","text":"前言由于国内IPv6还没有做到完全部署，目前国内APP应用虽支持IPv6使用，但使用效果并不良好，几乎所有的APP其虽声称支持IPv6网络但其功能并不能加载完全，怀疑其资源仍旧多搭载在IPv4服务器或CDN之上。大多数APP甚至无法产生IPv6主要通信流量。这里总结能够产生加密流量的十种APP应用。 1 十种IPv6加密应用 淘宝 京东 美团 百度 百度地图 迅雷 新浪微博 爱奇艺 优酷 腾讯视频 除以上10种应用之外，本调研还测试了其它国内应用包括携程旅行，苏宁易购，支付宝，网易云音乐，QQ，今日头条。但结果证明其他应用不能够在IPv6网络中完成基础功能的使用，导致无法产生加密流量。 2 具体结果淘宝淘宝app在使用中产生了大量的SSL/TLS流量，但明显其商品图片未能加载完毕，仅能进行简单的搜索和浏览功能，怀疑目前阶段淘宝的大量图片等资源仍放置在IPv4服务器或CDN之上。 尽管IPv6网络下淘宝app功能无法完全使用，但仍旧产生大量SSL/TLS加密流量。证明淘宝使用SSL/TLS加密通信。 京东京东能够进行基本的商品浏览和查看，唯一不能加载图片资源，使用SSL/TLS加密通信。 美团美团只能完成基础的浏览过程，其他功能基本无法使用，使用SSL/TLS加密通信。 百度百度搜索能够正常访问IPv6网站，其IPv4资源无法加载，使用SSL/TLS加密通信。 百度地图百度地图的定位功能无法使用，导致无法完成基本的导航任务，但在使用过程中产生了IPv6加密流量，使用SSL/TLS加密通信。 迅雷迅雷app内提供的其他服务如直播等都无法访问，但在使用过程中仍产生了加密流量，使用SSL/TLS加密通信。 新浪微博新浪微博基本搜索功能也都无法使用，但在使用过程中同样产生了加密流量，使用SSL/TLS加密通信。 爱奇艺视频软件爱奇艺能够正常加载app框架和文字资源，但其视频资源和图片资源无法加载，怀疑其视频图片仅存储在IPv4服务器或CDN之上，无法提供IPv6视频服务。在通信过程中也产生了IPv6加密流量。使用SSL/TLS加密通信。 优酷优酷相比爱奇艺，在IPv6环境下其能够加载图片资源，但视频资源仍旧无法播放。产生大量SSL/TLS加密流量，使用SSL/TLS加密通信。 腾讯视频腾讯视频相比于爱奇艺和优酷，其基本资源都无法加载，但在使用过程中仍旧产生了加密流量，使用SSL/TLS进行加密通信。","categories":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}]},{"title":"「IPv6 App TLS加密流量#01」IPv6移动应用抓包总结","slug":"IPv6-app-01-20220413","date":"2022-04-13T06:30:00.000Z","updated":"2022-04-13T08:22:32.719Z","comments":true,"path":"IPv6-app-01-20220413.html","link":"","permalink":"/IPv6-app-01-20220413.html","excerpt":"","text":"前言总结之前在项目中进行的IPv6加密应用的流量捕获环境搭建工作，搭建IPv6移动App的TLS加密流量捕获环境。 1 环境搭建由于国内目前只开放手机4G网络和校园网支持IPv6网络通信，并且在应用通信时，手机应用需禁用IPv4网络才能使应用在可控情况下仅访问IPv6网络而非默认使用IPv4网络。本次调研采用手机4G SIM卡并设置IPv6协议栈来支持仅IPv6网络环境配置，实现在手机上进行抓包实验。由于手机上的抓包应用多需要root权限，非root权限的抓包应用（例如 Packet Capture）需要建立VPN代理抓包（仅支持IPv4），因此抓包实验选择在手机上使用tcpdump完成。 1.1 设备一台电脑（实验时使用 MacOS Mojave） 一台具有root权限的手机（华为RIO-AL00，此手机已被root并保留在组内，可以后续继续使用） 4G SIM卡（实验时使用 北京移动4G） 1.2 软件Android SDK（Android Studio） Android platform-tools adb（Android Studio） tcpdump（Android编译版本） 1.3 搭建步骤1.3.1 手机仅开启IPv6协议栈由于为了防止应用默认使用IPv4网络，手机需要禁用IPv4协议栈。将手机SIM卡插入在手机中，在手机设置的移动网络中选择接入点名称（APN）进行设置，将其中的APN协议和APN漫游协议均改为IPv6 设置好后登陆ipv6-test.com或ipv6.tsinghua.edu.cn网站进行测试，保证IPv6开启且IPv4不可用。 1.3.2 手机获取Root权限一般手机需要首先进行账户BL锁解锁之后按照官网的刷机教程最后获取Root权限。由于华为在2018年5月份禁止了BL解锁通道，因此华为手机需要采用其他方式进行root权限获取。下面是在win7电脑上的解决办法。 登陆网盘https://www.lanzous.com/u/zc931025 密码931025，下载麦芒4【RIO-AL00】全部版本和abd+逆向.rar文件，解压abd+逆向.rar文件，打开cmd，逆向和设备管理器三个文件。 Remote technician address填写zc931025.in.3322.org.16580。 连接手机，等待完成后手机已经解锁并且刷机成功。 打开abd+逆向文件夹下的adb_cmd.exe。 打开麦芒4【RIO-AL00】全部版本需要解压密码zc931030。 将最终解压的文件拖入adb_cmd中执行。 然后输入fastboot flash recovery + 刚拖入的文件名。 最后输入fastboot boot + 刚拖入的文件名，手机端选择root权限，等待完成。 1.3.3 电脑使用Android调试工具操作手机抓包电脑需预先安装Android SDK和platform-tools工具集，可以通过安装Android Studio解决。 成功后首先将手机调成开发者模式后使用USB调试模式与电脑连接。 进入platform-tools目录下使用adb进行手机远程连接。 adb devices检测是否有设备连接。 adb shell进入手机shell。 shell输入su后获取root权限，此时需手机supersu软件点击确认手机授权。 chmod 777 /data/local修改文件夹权限以支持tcpdump写入。 exit退回本地使用adb push tcpdump /sdcard/tcpdump写入手机sdcard文件夹。 再次使用adb shell和su进入shell root后cp /sdcard/tcpdump /data/local/tcpdump。 至此，IPv6抓包环境已经搭建完毕，手机通过移动4G并禁用IPv4来连接纯IPv6网络，以此防止app使用默认的IPv4网络。手机通过USB调试模式连接电脑，并通过电脑Android adb工具进行远程连接，在手机端植入tcpdump进行抓包过程。 2 抓包过程2.1 数据包获取adb devices检测是否有设备连接。 adb shell进入手机shell。 进入/data/local目录使用./tcpdump -i any -p -s 0 -w /sdcard/test.pcap开始抓包过程。 因为远程传输需要在sdcard文件夹才能被允许交互所以需要在sdcard文件夹中转。 调整手机应用，完成需要抓取的应用操作后ctrl + c结束抓包过程。 最后回到本地使用adb pull /sdcard/test.pcap test.pcap进行数据包存储。 2.2 数据包解析在本地通过wireshark打开刚刚获取的数据包即可查看对应的解析内容，下面以淘宝应用抓包为例。 在wireshark中首先检查数据包IP是否为IPv6地址，其次过滤ssl流量并找到Clint Hello包展开SSL/TLS层找到Server Name Indication extension，发现其SNI为market.m.taobao.com，验证完毕。","categories":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}]},{"title":"「IPv6领域研究方向#03」IPv6地址关联","slug":"IPv6-reference-03-20220412","date":"2022-04-12T01:29:00.000Z","updated":"2022-04-12T02:17:06.000Z","comments":true,"path":"IPv6-reference-03-20220412.html","link":"","permalink":"/IPv6-reference-03-20220412.html","excerpt":"","text":"前言「IPv6的领域研究方向」共3篇，此篇为第三篇，主要讲解IPv6地址关联的研究点和相关参考文献。 1 Introduction由于不像IPv4网络拥有广泛的NAT部署，在IPv6网络下地址可以轻松地被用来标识唯一用户。在早期的地址配置方案中，基于无状态自动配置（SLAAC）的IPv6地址通过使用MAC地址构造接口标识符（EUI-64），这种方法可为用户分配全球唯一的IPv6地址。但是由于嵌入了物理地址信息，攻击者可以很容易通过获取具有该物理地址的网卡厂商和设备厂商的消费记录以追踪用户身份。为了保护用户隐私，RFC4941为IPv6地址的无状态自动配置添加了隐私扩展，以通过动态生成伪随机的接口标识符以构造隐私地址（临时地址），并被推荐在一天到一周的时间里频繁变化。 根据RFC 7707的测量结果表明，目前IPv6 Internet中70%的客户端正在使用隐私地址进行通信交互。隐私地址带来的IPv6客户端地址频繁变化的问题，毫无疑问给IPv6运营商或网络管理员对于网络服务的管理与评估带来了新的挑战。同时，随着服务端和用户隐私意识的提升，Internet中使用加密协议进行网络通信已成为主流，因此流量的负载加密化导致无法通过明文特征分析用户行为以标识唯一用户，用户与IPv6客户端地址的映射关系将无法验证。IPv6地址关联的目标即在频繁变化客户端地址的背景下解决地址-用户关系标识。 2 Motivation不像IPv4网络用户被掩盖在众多NAT地址下，IPv6包含的庞大地址空间使未来网络架构不再需要NAT部署。IPv6的零NAT架构给用户识别和追踪带来了实现的机会， 但是IPv6地址动态变化和TLS负载加密的双重压力使我们无法实现这种可能，克服IPv6网络场景下的该问题从而实现用户活动关联即是IPv6地址关联的主要动机。 3 Paper List此前并无IPv6的地址关联论文问世，相关文献主要从用户画像、TLS指纹、流序列方法三个角度出发实现用户追踪的相关工作，基于这些文章的追踪思想，我们在USENIX Security 2021发表了第一篇IPv6地址关联攻击的论文：SiamHAN: IPv6 Address Correlation Attacks on TLS Encrypted Traffic via Siamese Heterogeneous Graph Attention Network。 用户画像 Marek Kumpost and V ashek Matyas. User profiling and re-identification: Case of university-wide network analysis（TrustBus 2009）（利用客户端地址的所有目的IP来构建画像） Behavior-based tracking: Exploiting characteristic patterns in DNS traffic（Computer Security 2013）（客户端地址的所有DNS请求域以生成用户画像） User profiling in the time of HTTPS（IMC 2016）（利用SNI进行画像构建工作） TLS指纹 Network-based HTTPS client identification using SSL/TLS fingerprinting（ARES 2015）（利用TLS指纹可以实现客户端用户代理的识别任务） OS fingerprinting: New techniques and a study of information gain and obfuscation（CNS 2017）（利用TLS指纹实现了操作系统主要版本的识别任务） Deciphering malware’s use of TLS (without decryption)（Computer Virology &amp; Hacking Techniques 2018）（基于TLS指纹的恶意软件识别任务） 流序列方法 DeepCorr: Strong flow correlation attacks on tor using deep learning（CCS 2018）（使用流序列来关联Tor网络用户的入口和出口流量） Practical traffic analysis attacks on secure messaging applications（NDSS 2020）（利用流序列实现了IM即时通讯应用中的频道用户的识别） FS-Net: A flow sequence network for encrypted traffic classification（INFOCOM 2019）（利用流序列可以区分用户产生的流量的应用类型）","categories":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}]},{"title":"「华为手机刷机方法总结」解锁获取Root权限","slug":"Huawei-root-20220411","date":"2022-04-11T01:26:00.000Z","updated":"2022-04-11T01:48:30.000Z","comments":true,"path":"Huawei-root-20220411.html","link":"","permalink":"/Huawei-root-20220411.html","excerpt":"","text":"前言由于华为手机官网从2018年5月已禁止提供解锁码通道，导致BL锁无法解锁，致使华为手机无法获取root权限。以下内容为淘宝40元换来的知识经验，为未来华为root权限获取作为参考。 1 具体步骤登陆连接https://www.lanzous.com/u/zc931025 密码931025 下载麦芒4【RIO-AL00】全部版本和abd+逆向.rar文件 解压abd+逆向.rar文件，打开cmd，逆向和设备管理器三个文件 Remote technician address填写 zc931025.in.3322.org.16580（由于看不太清’.’有可能是空格） 连接手机 等待完成后手机已经解锁并且刷机成功 点击abd+逆向文件夹下的adb_cmd.exe 打开麦芒4【RIO-AL00】全部版本需要解压密码zc931030 将最终解压的文件拖入adb_cmd中执行 然后输入fastboot flash recovery + 刚拖入的文件名 最后输入fastboot boot完成root权限 + 刚拖入的文件名","categories":[{"name":"技术|爬坑","slug":"技术-爬坑","permalink":"/categories/技术-爬坑/"}],"tags":[{"name":"Root","slug":"Root","permalink":"/tags/Root/"}],"keywords":[{"name":"技术|爬坑","slug":"技术-爬坑","permalink":"/categories/技术-爬坑/"}]},{"title":"「IPv6领域研究方向#02」IPv6地址生成","slug":"IPv6-reference-02-20220408","date":"2022-04-08T05:02:00.000Z","updated":"2022-04-08T05:18:51.003Z","comments":true,"path":"IPv6-reference-02-20220408.html","link":"","permalink":"/IPv6-reference-02-20220408.html","excerpt":"","text":"前言IPv6地址生成又名为IPv6目标生成（Target Generation），是近些年在IPv6探测领域内最为活跃的研究方向之一，自测量顶会IMC的地址生成论文起始，再加上我国自2017年底《推进IPv6规模部署行动计划》的颁布，国内地址生成论文层出不穷，那么为什么这一方向让IPv6领域的大佬如此沉迷，让我们来具体看看。「IPv6的领域研究方向」共3篇，此篇为第二篇，主要讲解IPv6地址生成的研究点和相关参考文献。 1 IntroductionIPv6地址生成的主要目标是探索如何在广阔且稀疏的IPv6地址空间下实现活跃地址发现。由于IPv6的128位庞大地址空间导致现有的网络扫描方法（如Zmap等）在如今的计算资源和网络带宽下，仍需要花费长达数亿万年的时间才能完成全球IPv6地址空间探测。因此设计智能的地址生成算法以形成扫描列表来帮助实现活跃地址发现已经成为近年IPv6网络扫描领域的热点研究内容。 地址生成算法通过输入活跃IPv6地址作为种子集，从而学习种子集中的地址结构特征，并最终实现新的活跃目标预测，预测的活跃目标将作为候选集，等待输入网络扫描器进行扫描验证以实现活跃地址发现。 2 Motivation由于IPv6庞大的地址空间导致IPv6网络扫描不可能有效完成这一主要矛盾，IPv6地址生成任务有着天然的研究动机和意义。为解决这一矛盾，地址生成的目标是利用智能算法帮助研究人员从稀疏的IPv6地址空间中提前预测可能活跃的IPv6目标，形成待扫描的IPv6列表以实现活跃目标发现。虽然研究的方法并没有从根本上克服网络扫描的时效性问题，但却提供了一个极为新颖的思路以避开物理因素带来的现实瓶颈，因此成为了IPv6为数不多的热点研究内容之一。 3 Paper ListIPv6地址生成的论文最早始于国外ARES会议，经IMC 2016和2017会议的两篇论文而著名，而如今成为了国内争相发表的IPv6研究热点。而这些算法均为传统设计性算法，因此基于人工智能的地址生成算法成为了这些算法中较新颖的主题从而得以录用。同时部分方法还提出了IPv6网络扫描所需要面临的新颖话题——别名检测，通过检测并为真实用户绑定的别名地址以提升算法的有效命中率。 传统设计性算法 On Reconnaissance with IPv6: A Pattern-Based Scanning Approach (ARES 2015) (Rank: 4 stars) (第一篇地址生成算法) Entropy/IP: Uncovering Structure in IPv6 Addresses (IMC 2016) (Rank: 5 stars) (基于墒计算和贝叶斯网络的地址生成算法，有开源) Target Generation for Internet-wide IPv6 Scanning (IMC 2017) (Rank: 5 stars) (密度导向的地址生成算法) 6Tree: Efficient dynamic discovery of active addresses in the IPv6 address space (Computer Networks 2019) (Rank: 4 stars) (基于空间树的密度导向算法) Towards the Construction of Global IPv6 Hitlist and Efficient Probing of IPv6 Address Space (IWQoS 2020) (Rank: 4 stars) (优化的空间树算法，上一篇论文的翻版) 人工智能算法 6GCVAE: Gated Convolutional Variational Autoencoder for IPv6 Target Generation (PAKDD 2020) (组内) (深度学习的第一次尝试) 6VecLM: Language Modeling in Vector Space for IPv6 Target Generation (ECML/PKDD 2020) (组内) (IPv6语义探索) 6GAN: IPv6 Multi-Pattern Target Generation via Generative Adversarial Nets with Reinforcement Learning (INFOCOM 2021) (组内) (基于GAN网络的多模式目标生成) 6Hit: A Reinforcement Learning-based Approach to Target Generation for Internet-wide IPv6 Scanning (INFOCOM 2021) (Rank: 4 stars) (基于强化学习的地址生成算法) 别名检测篇 Target Generation for Internet-wide IPv6 Scanning (IMC 2017) (Rank: 5 stars) (第一次提出IPv6别名问题) Clusters in the Expanse Understanding and Unbiasing IPv6 Hitlists (IMC 2018) (Rank: 5 stars) (提出多级别名前缀检测策略) 6Tree: Efficient dynamic discovery of active addresses in the IPv6 address space (Computer Networks 2019) (Rank: 5 stars) (第一次运用到算法上的别名检测技术) 6GAN: IPv6 Multi-Pattern Target Generation via Generative Adversarial Nets with Reinforcement Learning (INFOCOM 2021) (组内) (基于强化学习的别名前缀检测)","categories":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}]},{"title":"「IPv6领域研究方向#01」IPv6网络测量","slug":"IPv6-reference-01-20220407","date":"2022-04-07T15:13:00.000Z","updated":"2022-04-08T04:42:15.000Z","comments":true,"path":"IPv6-reference-01-20220407.html","link":"","permalink":"/IPv6-reference-01-20220407.html","excerpt":"","text":"前言仅以此篇记录我在博士前四年的学术研究方向下阅读和调研的IPv6相关的参考文献。「IPv6的领域研究方向」共3篇，此篇为第一篇，主要内容是IPv6网络测量的研究点和相关参考文献。 1 IntroductionIPv6网络测量的主要目标是探究探究IPv6网络下的一切有关网络状态的属性或指标。由于IPv6作为下一代网络的核心协议，IPv6网络的加速部署以及由IPv4向IPv6网络的广泛过渡已经成为近十年网络运营商正在践行的目标。因此，对IPv6网络状态的评估工作一直都是网络测量研究人员的研究热点内容之一。 2 Motivation网络测量的研究点包括众多，测量的角度也层出不穷，但由于测量的方法一般趋于固定，要拿出足够打动审稿人的创新点，一般需要强烈或新颖的论文动机。对于现阶段IPv6网络测量论文，一般都会拥有大规模的全球数据集或测量点，或巨大的工作量如长达数年以上的测量时间，或提出全新的测量方法或研究视角，或对特殊场景或历史事件的网络状态测量，或对整个测量社区作出了巨大贡献的一个或几个特点，也是所有测量论文究其根本的创新所在。 3 Paper List以下论文列表并非近些年的所有以IPv6网络测量为主题的论文集合，仅包括了这些年我所阅读的IPv6测量文章，在这里分享给大家并标注了以个人标准评判的阅读推荐等级。 IPv6基础测量篇 Understanding IPv6 Internet Background Radiation (IMC 2013) (Rank: 5 stars) (迄今为止规模最大的测量数据集) Measuring IPv6 Adoption (SIGCOMM 2014) (Rank: 5 stars) (囊括了12项测量指标，非常好的测量入门级论文) Who Knocks at the IPv6 Door? Detecting IPv6 Scanning (IMC 2018) (Rank: 4 stars) (DNS反向散射发现扫描发起者) Discovering the IPv6 Network Edge (PAM 2020) (Rank: 4 stars) (IPv6边界路由节点发现) Evaluating IPv6 Adoption in the Internet (PAM 2010) (Rank: 3 stars) (早期IPv6评估，仅学习测量数据表现方式) In the IP of the Beholder Strategies for Active IPv6 Topology Discovery (IMC 2018) (Rank: 5 stars) (与传统方法不同的IPv6拓扑发现方法) Investigating IPv6 Traffic What happened at the World IPv6 Day? (PAM 2012) (Rank: 4 stars) (值得了解的世界IPv6日测量) Large-Scale Classification of IPv6-IPv4 Siblings with Variable Clock Skew (TMA 2017) (Rank: 4 stars) (双栈主机分类方法) Towards A User-Level Understanding of IPv6 Behavior (IMC 2020) (Rank: 5 stars) (用户级IPv6地址相关分析，很多结论可以被作引用) What’s Going On in Chinese IPv6 World (NOMS 2012) (Rank: 3 stars) (国内早期IPv6发展) IPv6地址提取篇 Scanning the IPv6 Internet: Towards a Comprehensive Hitlist (TMA 2016) (Rank: 5 stars) (第一篇较大地址数据集) Something From Nothing (There): Collecting Global IPv6 Datasets From DNS (PAM 2017) (Rank: 5 stars) (全新的地址获取方法) Enumerating Active IPv6 Hosts for Large-scale Security Scans via DNSSEC-signed Reverse Zones (NDSS 2018) (Rank: 4 stars) (与上一篇地址提取方法类似的DNSSEC版本) Clusters in the Expanse Understanding and Unbiasing IPv6 Hitlists (IMC 2018) (Rank: 5 stars) (公开且持续更新的活跃地址数据集) 地址模式分析篇 Temporal and Spatial Classification of Active IPv6 (IMC 2015) (Rank: 5 starts) (基于时间与空间实现地址模式分析) Don’t Forget to Lock the Back Door! A Characterization of IPv6 Network Security Policy (NDSS 2016) (Rank: 4 stars) (比较双栈主机的防火墙策略，其中包含对地址格式的分析) Clusters in the Expanse Understanding and Unbiasing IPv6 Hitlists (IMC 2018) (Rank: 5 stars) (无监督学习实现地址模式的可视化分析)","categories":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"/tags/IPv6/"}],"keywords":[{"name":"技术|科研","slug":"技术-科研","permalink":"/categories/技术-科研/"}]},{"title":"「Sakura主题美化与修改#06」Hexo-Sakura主题在评论区利用QQ邮箱拉取QQ头像","slug":"Sakura-config-comments-icon-20200902","date":"2020-09-01T17:29:20.000Z","updated":"2020-09-09T14:45:41.089Z","comments":true,"path":"Sakura-config-comments-icon-20200902.html","link":"","permalink":"/Sakura-config-comments-icon-20200902.html","excerpt":"","text":"前言WordPress-Sakura版本中的评论区QQ头像拉取功能在Hexo-Sakura版中并未移植，本篇文章将参考如何恢复该功能的实现。该文章的思路是通过QQ邮箱中截取QQ号来拉取QQ头像。 本篇文章的内容参考了cungudafa的博客文章。 1 更新Valine首先下载Valine.min.js的1.4.4版本，注意版本不同可能会导致修改的部分存在差别。 在从博客根目录出发的themes/Sakura/layout/_partial/footer.ejs中注释之前的Valine.min.js引用并添加新的引用： &lt;script src=&quot;/js/Valine.min.js&quot;&gt;&lt;/script&gt; 2 QQ头像获取打开Valine.min.js查找以下内容： E.cdn+(0,s.default)(t.get(&quot;mail&quot;))+E.params 将其修改为： (qq_img) 在该代码的前一个分号;后添加如下代码： //var qq_img = m.cdn + a(e.get(&quot;mail&quot;)) + m.params; var qq_img = E.cdn+(0,s.default)(t.get(&quot;mail&quot;))+E.params; if (t.get(&quot;mail&quot;).indexOf(&quot;@qq.com&quot;) &gt;= 0) { var prefix = t.get(&quot;mail&quot;).replace(/@.*/, &quot;&quot;);//前缀 var pattern = /^\\d+$/g; //正则表达式 var result = prefix.match(pattern);//match 是匹配的意思 if (result !== null) { qq_img = &quot;//q1.qlogo.cn/g?b=qq&amp;nk=&quot; + prefix + &quot;&amp;s=100&quot;; } } 最后将修改后的Valine.min.js文件放在从博客根目录出发的themes/Sakura/source/js/下即可。效果如下：","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Sakura主题美化与修改#05」Hexo-Sakura主题添加你的站点统计信息","slug":"Sakura-config-statistics-build-20200902","date":"2020-09-01T16:17:35.000Z","updated":"2020-09-09T14:58:55.268Z","comments":true,"path":"Sakura-config-statistics-build-20200902.html","link":"","permalink":"/Sakura-config-statistics-build-20200902.html","excerpt":"","text":"前言创建一些统计内容可以让我们更容易地了解某个博客的生存状态，也会在日后为你增加满满的成就感，因为我们来尝试一些手段统计我们的博客或文章数据，以此来展现你的博客履历。 本篇文章参考了uncle_drew的博客文章花里胡哨的Hexo | 给你的hexo博客加上文章分析的部分内容。 1 创建统计信息页首先前往主题目录的主题配置文件_config.yml中设置统计目录： 统计信息: { path: /statistics/, fa: fa-bar-chart } 随后前往博客根目录下的source/目录中创建/statistics/index.md文件，并添加内容： --- title: Statistics date: layout: statistics --- 再次前往从博客根目录出发的themes/Sakura/layout/目录下创建statistics.ejs，其内容为： &lt;div class=&quot;pattern-center-blank&quot;&gt; &lt;/div&gt; &lt;div class=&quot;pattern-center &quot;&gt; &lt;div class=&quot;pattern-attachment-img&quot;&gt; &lt;img src=&quot;/img/new_banner/statistics.png&quot; data-src=&quot;&lt;%= page.photos %&gt;&quot; class=&quot;lazyload&quot; onerror=&quot;imgError(this,3)&quot; style=&quot;width: 100%; height: 100%; object-fit: cover; pointer-events: none;&quot;&gt; &lt;/div&gt; &lt;header class=&quot;pattern-header &quot;&gt; &lt;h1 class=&quot;entry-title&quot;&gt; 统计信息&lt;/h1&gt; &lt;/header&gt; &lt;/div&gt; &lt;div id=&quot;content&quot; class=&quot;site-content&quot;&gt; &lt;article class=&quot;post-item post-301 page type-page status-publish has-post-thumbnail hentry&quot;&gt; &lt;/div&gt; 基本的统计信息页就创建完毕了，下面要为其添加具体内容。 2 网站运行时间在statistics.ejs中的&lt;article ...&gt;标签下添加以下内容： &lt;h3 class=&quot;link-title&quot;&gt;&lt;span class=&quot;fake-title&quot;&gt;1. 基本信息&lt;/span&gt;&lt;/h3&gt; &lt;span id=&quot;sitetime&quot;&gt;&lt;/span&gt; &lt;script language=javascript&gt; function siteTime(){ window.setTimeout(&quot;siteTime()&quot;, 1000); var seconds = 1000; var minutes = seconds * 60; var hours = minutes * 60; var days = hours * 24; var years = days * 365; var today = new Date(); var todayYear = today.getFullYear(); var todayMonth = today.getMonth()+1; var todayDate = today.getDate(); var todayHour = today.getHours(); var todayMinute = today.getMinutes(); var todaySecond = today.getSeconds(); /* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳) year - 作为date对象的年份，为4位年份值 month - 0-11之间的整数，做为date对象的月份 day - 1-31之间的整数，做为date对象的天数 hours - 0(午夜24点)-23之间的整数，做为date对象的小时数 minutes - 0-59之间的整数，做为date对象的分钟数 seconds - 0-59之间的整数，做为date对象的秒数 microseconds - 0-999之间的整数，做为date对象的毫秒数 */ var t1 = Date.UTC(2020,08,30,00,00,00); //北京时间2020-08-30 00:00:00 var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond); var diff = t2-t1; var diffYears = Math.floor(diff/years); var diffDays = Math.floor((diff/days)-diffYears*365); var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours); var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes); var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds); document.getElementById(&quot;sitetime&quot;).innerHTML=&quot; 运行时间(Running Time): 网站已在互联网海洋里漂流了 &quot;+/*diffYears+&quot; 年 &quot;+*/diffDays+&quot; 天 &quot;+diffHours+&quot; 小时 &quot;+diffMinutes+&quot; 分钟 &quot;+diffSeconds+&quot; 秒。&quot;; } siteTime(); &lt;/script&gt; 其中你可以自行修改代码块中第28行和第36行的内容，以控制起始计时时间和最终文本显示。 3 网站访客数和访客量在statistics.ejs中的&lt;article ...&gt;标签下添加以下内容（若你已添加了网站运行时间，则继续在网站运行时间代码后添加即可）： &lt;p&gt;访问量和访客数(Page View and Unique Visitor): &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt; 累积收获了 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 次访问量, &lt;/span&gt; &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 共 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; 个小伙伴驻足。 &lt;/span&gt; &lt;/p&gt; 你可以自定义修改其中的文本内容。 4 文章统计图首先下载echarts.min.js，并放在从博客根目录出发的themes/Sakura/source/js/目录下。 在statistics.ejs中的&lt;article ...&gt;标签下添加以下内容（若你已添加了网站运行时间和网站访客统计，则继续在网站访客统计代码后添加即可）： &lt;h3 class=&quot;link-title&quot;&gt;&lt;span class=&quot;fake-title&quot;&gt;2. 文章统计&lt;/span&gt;&lt;/h3&gt; &lt;div id=&quot;contentss&quot;&gt; &lt;%- partial(&#39;_widget/post-charts&#39;) %&gt; &lt;/div&gt; 随后在从博客根目录出发的themes/Sakura/source/css/style.css文件中添加样式控制： #contentss { position: relative; width: 800px; height: 900px; max-height: 1200px; margin-bottom: 15px; margin-top: 15px; text-align: center; border: 0; border-radius: 10px; color: rgba(0, 0, 0, .87); background: #fff 50%; background-size: cover; box-shadow: 0 15px 35px rgba(50, 50, 93, .1), 0 5px 15px rgba(0, 0, 0, .07); margin:0 auto; } 最后创建themes/Sakura/layout/_widget/post-charts.ejs文件，其内容为： &lt;style type=&quot;text/css&quot;&gt; #posts-chart, #categories-chart, #tags-chart { width: 100%; height: 300px; margin: 0.5rem auto; padding: 0.5rem; } &lt;/style&gt; &lt;div id=&quot;postCharts&quot; class=&quot;post-charts&quot;&gt; &lt;div class=&quot;title center-align&quot; data-aos=&quot;zoom-in-up&quot;&gt; &lt;/div&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;chart col s12 m6 l4&quot; data-aos=&quot;zoom-in-up&quot;&gt; &lt;div id=&quot;posts-chart&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;chart col s12 m6 l4&quot; data-aos=&quot;zoom-in-up&quot;&gt; &lt;div id=&quot;tags-chart&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;chart col s12 m6 l4&quot; data-aos=&quot;zoom-in-up&quot;&gt; &lt;div id=&quot;categories-chart&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/echarts.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; let postsChart = echarts.init(document.getElementById(&#39;posts-chart&#39;)); let categoriesChart = echarts.init(document.getElementById(&#39;categories-chart&#39;)); let tagsChart = echarts.init(document.getElementById(&#39;tags-chart&#39;)); &lt;% /* calculate postsOption data. */ var startDate = moment().subtract(1, &#39;years&#39;).startOf(&#39;month&#39;); var endDate = moment().endOf(&#39;month&#39;); var monthMap = new Map(); var dayTime = 3600 * 24 * 1000; for (var time = startDate; time &lt;= endDate; time += dayTime) { var month = moment(time).format(&#39;YYYY-MM&#39;); if (!monthMap.has(month)) { monthMap.set(month, 0); } } // post and count map. site.posts.forEach(function (post) { var month = post.date.format(&#39;YYYY-MM&#39;); if (monthMap.has(month)) { monthMap.set(month, monthMap.get(month) + 1); } }); // xAxis data and yAxis data. var monthArr = JSON.stringify([...monthMap.keys()]); var monthValueArr = JSON.stringify([...monthMap.values()]); %&gt; let postsOption = { title: { text: &#39;打鱼晒网统计图（文章发布）&#39;, top: 0, x: &#39;center&#39; }, tooltip: { trigger: &#39;axis&#39; }, xAxis: { type: &#39;category&#39;, data: &lt;%- monthArr %&gt; }, yAxis: { type: &#39;value&#39;, }, series: [ { name: &#39;&lt;%- __(&quot;postsNumberName&quot;) %&gt;&#39;, type: &#39;line&#39;, color: [&#39;#6772e5&#39;], data: &lt;%- monthValueArr %&gt;, markPoint: { symbolSize: 45, color: [&#39;#fa755a&#39;,&#39;#3ecf8e&#39;,&#39;#82d3f4&#39;], data: [{ type: &#39;max&#39;, itemStyle: {color: [&#39;#3ecf8e&#39;]}, name: &#39;&lt;%- __(&quot;maximum&quot;) %&gt;&#39; }, { type: &#39;min&#39;, itemStyle: {color: [&#39;#fa755a&#39;]}, name: &#39;&lt;%- __(&quot;minimum&quot;) %&gt;&#39; }] }, markLine: { itemStyle: {color: [&#39;#ab47bc&#39;]}, data: [ {type: &#39;average&#39;, name: &#39;&lt;%- __(&quot;average&quot;) %&gt;&#39;} ] } } ] }; &lt;% /* calculate tagsOption data. */ // get all tags name and count,then order by length desc. var tagArr = []; site.tags.map(function(tag) { tagArr.push({&#39;name&#39;: tag.name, &#39;value&#39;: tag.length}); }); tagArr.sort((a, b) =&gt; {return b.value - a.value}); // get Top 10 tags name and count. var tagNameArr = []; var tagCountArr = []; for (var i = 0, len = Math.min(tagArr.length, 10); i &lt; len; i++) { tagNameArr.push(tagArr[i].name); tagCountArr.push(tagArr[i].value); } var tagNameArrJson = JSON.stringify(tagNameArr); var tagCountArrJson = JSON.stringify(tagCountArr); %&gt; let tagsOption = { title: { text: &#39;术业专攻统计图（文章标签Top10） &#39;, top: 2, x: &#39;center&#39; }, tooltip: {}, xAxis: [ { type: &#39;category&#39;, data: &lt;%- tagNameArrJson %&gt; } ], yAxis: [ { type: &#39;value&#39; } ], series: [ { type: &#39;bar&#39;, color: [&#39;#82d3f4&#39;], barWidth : 18, data: &lt;%- tagCountArrJson %&gt;, markPoint: { symbolSize: 45, data: [{ type: &#39;max&#39;, itemStyle: {color: [&#39;#3ecf8e&#39;]}, name: &#39;&lt;%- __(&quot;maximum&quot;) %&gt;&#39; }, { type: &#39;min&#39;, itemStyle: {color: [&#39;#fa755a&#39;]}, name: &#39;&lt;%- __(&quot;minimum&quot;) %&gt;&#39; }], }, markLine: { itemStyle: {color: [&#39;#ab47bc&#39;]}, data: [ {type: &#39;average&#39;, name: &#39;&lt;%- __(&quot;average&quot;) %&gt;&#39;} ] } } ] }; &lt;% /* calculate categoriesOption data. */ var categoryArr = []; site.categories.map(function(category) { categoryArr.push({&#39;name&#39;: category.name, &#39;value&#39;: category.length}); }); var categoryArrJson = JSON.stringify(categoryArr); %&gt; let categoriesOption = { title: { text: &#39;分门别类统计图（文章分类）&#39;, top: 1, x: &#39;center&#39; }, tooltip: { trigger: &#39;item&#39;, formatter: &quot;{a} &lt;br/&gt;{b} : {c} ({d}%)&quot; }, series: [ { name: &#39;&lt;%- __(&quot;categories&quot;) %&gt;&#39;, type: &#39;pie&#39;, radius: &#39;50%&#39;, color: [&#39;#6772e5&#39;, &#39;#ff9e0f&#39;, &#39;#fa755a&#39;, &#39;#3ecf8e&#39;, &#39;#82d3f4&#39;, &#39;#ab47bc&#39;, &#39;#525f7f&#39;, &#39;#f51c47&#39;, &#39;#26A69A&#39;], data: &lt;%- categoryArrJson %&gt;, itemStyle: { emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39; } } } ] }; // render the charts postsChart.setOption(postsOption); tagsChart.setOption(tagsOption); categoriesChart.setOption(categoriesOption); &lt;/script&gt; 你可以修改其中的文字内容以自定义图表title。 最后的统计页效果展示：","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Sakura主题美化与修改#04」Hexo-Sakura主题添加你的照片墙","slug":"Sakura-config-picture-build-20200901","date":"2020-09-01T15:30:05.000Z","updated":"2020-09-09T14:44:21.524Z","comments":true,"path":"Sakura-config-picture-build-20200901.html","link":"","permalink":"/Sakura-config-picture-build-20200901.html","excerpt":"","text":"前言在Hexo-Sakura主题原版菜单中有图集这样的分类页，但没有具体的实现，现在就让我们来使用照片墙作为本页的内容展示吧。 修改步骤首先前往主题目录的主题配置文件_config.yml中修改图集目录： 我的图集: {path: /picture/, fa: fa-photo } 随后前往博客根目录下的source/目录中创建/picture/index.md文件，并添加以下内容，注意!!!处应为{&#37; raw &#37;}，$$$应为{&#37; endraw &#37;}，因为在写这篇博客时它会在博客文章中执行而非显示源代码，所以在这里我先用了符号来替代，切记使用时一定要换回去： --- title: Picture comments: false date: 2019-01-04 22:53:25 keywords: 图片展览馆 description: photos: /img/new_banner/picture1.jpg --- !!! &lt;h3 class=&quot;link-title&quot;&gt;&lt;span class=&quot;fake-title&quot;&gt;标题&lt;/span&gt;&lt;/h3&gt; &lt;p style=&quot;margin-left: 3%; margin-right: 3%&quot;&gt;描述&lt;/p&gt; &lt;div class=&quot;container_img&quot;&gt; &lt;center class=&quot;half&quot;&gt; &lt;img class=&quot;pic&quot; src=&quot;/img/content/picture/1.jpeg&quot;/&gt;&amp;nbsp;&lt;img class=&quot;pic&quot; src=&quot;/img/content/picture/2.jpeg&quot;/&gt;&amp;nbsp;&lt;img class=&quot;pic&quot; src=&quot;/img/content/picture/3.jpeg&quot;/&gt; &lt;img class=&quot;pic&quot; src=&quot;/img/content/picture/4.jpeg&quot;/&gt;&amp;nbsp;&lt;img class=&quot;pic&quot; src=&quot;/img/content/picture/5.jpeg&quot;/&gt;&amp;nbsp;&lt;img class=&quot;pic&quot; src=&quot;/img/content/picture/6.jpeg&quot;/&gt; &lt;/center&gt; &lt;/div&gt; $$$ 注意其中所有图片的路径，photos对应的banner以及照片墙中的每张照片都是从博客根目录出发的themes/Sakura/source/目录下的/img/new_banner/和/img/content/picture/，你可以自定义自己的图片路径并确保目录的正确性。","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Sakura主题美化与修改#03」Hexo-Sakura主题添加你的学习计划书签库","slug":"Sakura-config-book-build-20200901","date":"2020-09-01T13:59:40.000Z","updated":"2020-09-09T14:43:18.373Z","comments":true,"path":"Sakura-config-book-build-20200901.html","link":"","permalink":"/Sakura-config-book-build-20200901.html","excerpt":"","text":"前言在Hexo-Sakura主题原版菜单中有番剧这样的分类页，我们完全可以将其修改为书单页来记录并规划自己的阅读计划。 1 创建对应目录首先前往主题目录的主题配置文件_config.yml中修改书单目录： 我的书单: {path: /book/, fa: fa-th-list } 随后前往博客根目录下的source/目录中创建/book/index.md文件，并添加内容： --- layout: book title: Book comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: - img: /img/content/book/tcpip.png title: TCP/IP详解 - 卷1 协议 status: 已看完 progress: 100 jp: TCP/IP Illustrated - Volume 1 The Protocols time: 2016-06 desc: 已故专家W. Richard Stevens的《TCP/IP详解》是一部经典之作!第1版自1994年出版以来 深受读者欢迎,但其内容有些已经陈旧,而且没有涉及IPv6。现在,这部世界领先的TCP/IP畅销书已由网络顶级专家Kevin R. Fall博&gt;士彻底更新,反映了新一代基于TCP/IP的网络技术。 --- 其中展示了一本书的定义内容，稍后可以再回来自定义修改或添加新的内容。 2 新建.ejs文件前往从博客根目录出发的themes/Sakura/layout/目录下创建book.ejs： &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/bangumi.css&quot;&gt; &lt;div class=&quot;pattern-center-blank&quot;&gt;&lt;/div&gt; &lt;div id=&quot;content&quot; class=&quot;site-content&quot;&gt; &lt;article class=&quot;post-item post-301 page type-page status-publish has-post-thumbnail hentry&quot;&gt; &lt;header class=&quot;page-header&quot;&gt;&lt;h1 class=&quot;cat-title&quot;&gt;图书馆&lt;/h1&gt; &lt;span class=&quot;cat-des&quot;&gt;&lt;p&gt;学习永无止境&lt;/p&gt; &lt;/span&gt;&lt;/header&gt; &lt;% if (page.bangumis) { %&gt; &lt;div class=&quot;bangumi&quot;&gt; &lt;div class=&quot;row&quot; id=&quot;rootRow&quot;&gt; &lt;% (page.bangumis||[]).forEach(function (bangumi, index) { %&gt; &lt;div class=&quot;col s12 m6&quot; id=&quot;bangumi-&lt;%- index %&gt;&quot;&gt; &lt;div class=&quot;card hoverable&quot; style=&quot;overflow: visible;&quot;&gt; &lt;div class=&quot;card-image waves-effect waves-block waves-light&quot;&gt; &lt;div class=&quot;activator itempic lazyload&quot; style=&quot;background-image: url(&lt;%- bangumi.img %&gt;);&quot; data-src=&quot;&lt;%- bangumi.img %&gt;&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;div class=&quot;card-title should-ellipsis activator grey-text text-darken-4&quot;&gt; &lt;%- bangumi.title %&gt;&lt;i class=&quot;fa fa-commenting-o right&quot;&gt;&lt;/i&gt; &lt;/div&gt; &lt;p class=&quot;should-ellipsis-full&quot;&gt; &lt;%- bangumi.jp %&gt;&lt;/p&gt; &lt;ul class=&quot;skill-list&quot;&gt; &lt;li class=&quot;skill&quot;&gt; &lt;div&gt; &lt;%- bangumi.status %&gt;&lt;/div&gt; &lt;progress class=&quot;skill-1&quot; max=&quot;100&quot; value=&quot;&lt;%- bangumi.progress %&gt;&quot;&gt; &lt;/progress&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;card-reveal&quot; style=&quot;display: none; transform: translateY(0%);&quot;&gt; &lt;span class=&quot;card-title grey-text text-darken-4&quot;&gt; &lt;%- bangumi.title %&gt;&lt;i class=&quot;fa fa-close right&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;span&gt; &lt;%- bangumi.jp %&gt;&lt;br&gt; &lt;/span&gt; &lt;span&gt; 出版时间: &lt;%- bangumi.time %&gt;&lt;span&gt; &lt;p&gt;&lt;%- bangumi.desc %&gt;&lt;/p&gt; &lt;ul class=&quot;skill-list&quot;&gt; &lt;li class=&quot;skill&quot;&gt; &lt;div&gt; &lt;%- bangumi.status %&gt;&lt;/div&gt; &lt;progress class=&quot;skill-1&quot; max=&quot;100&quot; value=&quot;&lt;%- bangumi.progress %&gt;&quot;&gt; &lt;/progress&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/span&gt; &lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;% }) %&gt; &lt;/div&gt; &lt;/div&gt; &lt;% } %&gt; &lt;/article&gt; &lt;/div&gt; 其实就是复制了bangumi.ejs的内容并修改了一些文字信息。 3 修改样式如果你想让书单页的每行展示更多的书籍图片（原本为一行2本），我们还需要修改展示样式以节省展示空间。 修改从博客根目录出发的themes/Sakura/source/css/bangumi.css，在其中搜索： @media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}} 你可以将其中的50%修改为33%或25%，这将对应每行展示3本或4本书籍，修改后的结果展示：","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Sakura主题美化与修改#02」Hexo-Sakura主题全站字体更换和修复分类页文章图片压缩","slug":"Sakura-config-font-and-category-img-20200901","date":"2020-09-01T13:20:15.000Z","updated":"2020-09-09T14:43:52.868Z","comments":true,"path":"Sakura-config-font-and-category-img-20200901.html","link":"","permalink":"/Sakura-config-font-and-category-img-20200901.html","excerpt":"","text":"前言本篇文章节选自Mario的雾时之森部分内容，完成更改后记得使用hexo g命令执行你的更改～ 1 全站字体更换搜索你想要更换的字体包，注意不要使用太大的字体包，否则会影响加载速度。本站使用的是站酷快乐体。 先选择一个你喜欢的字体下载他的 TTF 字体包（超过 3M 的我不建议你用它），用字客网转下格式（eot、woff、ttf、svg） 然后按如下 CSS 引用你的字体包，放到主题根目录的style.css文件里，具体位置为从博客根目录出发的themes\\Sakura\\source\\css\\style.css： @font-face { font-family: &quot;zhanku&quot;; src: url(&quot;https://cdn.jsdelivr.net/gh/Fog-Forest/cdn@2.0.1/Sakura/fonts/zhanku/zhanku.eot&quot;); /* IE9 */ src: url(&quot;https://cdn.jsdelivr.net/gh/Fog-Forest/cdn@2.0.1/Sakura/fonts/zhanku/zhanku.eot?#iefix&quot;) format(&quot;embedded-opentype&quot;), /* IE6-IE8 */ url(&quot;https://cdn.jsdelivr.net/gh/Fog-Forest/cdn@2.0.1/Sakura/fonts/zhanku/zhanku.woff&quot;) format(&quot;woff&quot;), /* chrome、firefox */ url(&quot;https://cdn.jsdelivr.net/gh/Fog-Forest/cdn@2.0.1/Sakura/fonts/zhanku/zhanku.ttf&quot;) format(&quot;truetype&quot;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+ */ url(&quot;https://cdn.jsdelivr.net/gh/Fog-Forest/cdn@2.0.1/Sakura/fonts/zhanku/zhanku.svg#zhanku&quot;) format(&quot;svg&quot;); /* iOS 4.1- */ font-style: normal; font-weight: normal; } 最后在主题根目录的style.css文件中寻找并修改以下内容： .top-feature-row { width: 100%; height: auto; font-family: &#39;Noto Serif SC&#39;;/*这边用原来字体主要是怕聚焦图错位*/ margin-top: 55px } /*移动端字体*/ .chinese-font { font-family: zhanku, &#39;Merriweather Sans&#39;, Helvetica, Tahoma, Arial, &#39;PingFang SC&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, &#39;WenQuanYi Micro Hei&#39;, sans-serif } /*PC端字体*/ .serif { font-family: zhanku, &#39;Noto Serif SC&#39;, &#39;Source Han Serif SC&#39;, &#39;Source Han Serif&#39;, source-han-serif-sc, &#39;PT Serif&#39;, &#39;SongTi SC&#39;, &#39;MicroSoft Yahei&#39;, Georgia, serif } /*移动端字体*/ @media (max-width:860px) { .serif { font-family: zhanku, &#39;Merriweather Sans&#39;, Helvetica, Tahoma, Arial, &#39;PingFang SC&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, &#39;WenQuanYi Micro Hei&#39;, sans-serif } } 2 修复分类页的文章小图标压缩变形细心的你会发现在分类页你的分类页下的文章的图标有时候会被压缩十分影响美观： 在浏览器中F12你会发现是因为强制设置了图片的width和height导致的，此时需要为主题根目录的style.css中的.feature img添加object-fit: cover;控制： .feature img { width:100px; height:100px; border-radius:50%; padding:2px; border:1px solid #dadada; object-fit: cover; position: relative; } 之后你的文章小图标就会尽显示图片的中间区域，而不会变形了：","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Sakura主题美化与修改#01」Hexo-Sakura主题首页的美化和修改","slug":"Sakura-config-home-20200901","date":"2020-08-31T17:47:30.000Z","updated":"2020-09-09T14:47:40.816Z","comments":true,"path":"Sakura-config-home-20200901.html","link":"","permalink":"/Sakura-config-home-20200901.html","excerpt":"","text":"前言本篇文章的内容有参考Mashiro，Mario，cungudafa，wallleap，Yremp的博客内容，感谢各位大佬的分享。 1 制作和Mashiro大佬一样的网站Logo下载字体经过仔细的观察，发现原版Mashiro大佬的网站樱花庄的白猫使用的是方正有猫在字体，可以直接百度会获得很多的下载地址～当然你也可以使用其他字体，例如Mario的萝莉小猫咪体和cungudafa的kitty原始猫咪中文智能手机字体。 Fontmin的使用前往Github下载Fontmin App，选择对应的客户端版本（支持Mac和Windows）。 将你的字体包的.ttf文件放入Fontmin并输入你要转换的文字，最后点击生成即可得到我们需要的字体样式文件。 样式引入将生成的文件夹放入从博客更目录出发的themes/Sakura/source/fonts/目录下。随后修改themes/Sakura/layout/_partial/head.ejs文件，在其中link标签部分添加： &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/FZYouMaoZaiJ.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/fonts/FZYouMaoZaiJ/FZYouMaoZaiJ.css&quot;&gt; 注意第一个.css文件我们将稍后创建，第二个.css文件为刚才放在fonts目录下的文件，注意文件名不要写错。 随后修改从博客根目录出发的themes/Sakura/layout/_partial/header.ejs的约4-11行&lt;span class=&quot;site-title&quot;&gt;...&lt;/span&gt;部分，更改为： &lt;span class=&quot;site-title&quot;&gt; &lt;span class=&quot;logolink FZYouMaoZaiJ&quot;&gt; &lt;a href=&quot;/&quot;&gt; &lt;ruby&gt; &lt;span class=&quot;sakuraso&quot;&gt;冬天&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;の&lt;/span&gt; &lt;span class=&quot;shironeko&quot;&gt;雨滴&lt;/span&gt; &lt;rp&gt;&lt;/rp&gt; &lt;rt class=&quot;FZYouMaoZaiJ&quot;&gt;Raindrops in winter&lt;/rt&gt; &lt;rp&gt;&lt;/rp&gt; &lt;/ruby&gt; &lt;/a&gt; &lt;/span&gt; &lt;/span&gt; 最后创建我们在head.ejs中引入的第一个文件即themes/Sakura/source/css/FZYouMaoZaiJ.css .FZYouMaoZaiJ { font-family: &#39;FZYouMaoZaiJ&#39;, &#39;Merriweather Sans&#39;, Helvetica, Tahoma, Arial, &#39;PingFang SC&#39;, &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, &#39;WenQuanYi Micro Hei&#39;, sans-serif; } .logolink .sakuraso { background-color: rgba(255, 255, 255, .5); border-radius: 5px; color: #464646; height: auto; line-height: 25px; margin-right: 0; padding-bottom: 0px; padding-top: 1px; text-size-adjust: 100%; width: auto } .logolink a:hover .sakuraso { background-color: orange; color: #fff; } .logolink a:hover .shironeko, .logolink a:hover rt { color: orange; } .logolink.FZYouMaoZaiJ a { color: #464646; float: left; font-size: 25px; font-weight: 800; height: 56px; line-height: 56px; padding-left: 6px; padding-right: 15px; padding-top: 11px; text-decoration-line: none; } .logolink.FZYouMaoZaiJ .sakuraso,.logolink.FZYouMaoZaiJ .no { font-size: 25px; border-radius: 9px; padding-bottom: 2px; padding-top: 5px; } .logolink.FZYouMaoZaiJ .no { display: inline-block; margin-left: 5px; } .logolink a:hover .no { -webkit-animation: spin 1.5s linear infinite; animation: spin 1.5s linear infinite; } .logolink ruby { ruby-position: under; -webkit-ruby-position: after; } .logolink ruby rt { font-size: 12px; transform: translateY(-15px); opacity: 0; transition-property: opacity; transition-duration: 0.5s, 0.5s; } .logolink a:hover ruby rt { opacity: 1 } 最后你就可以得到一款模仿Mashiro大佬的网站logo了： 2 顶部菜单栏图标及动画修改顶部菜单栏的基本内容是在主题配置文件_config.yml下完成的： menus: 首页: { path: /, fa: fa-fort-awesome faa-horizontal } 归档: { path: /archives, fa: fa-archive faa-shake } 技术: { path: javascript:;, fa: fa-code-fork faa-flash, submenus: { 技术|科研: {path: /categories/技术-科研/, fa: fa-code }, 技术|兴趣: {path: /categories/技术-兴趣/, fa: fa-terminal}, 技术|爬坑: {path: /categories/技术-爬坑/, fa: fa-bug } } } 笔记: { path: javascript:;, fa: fa-paint-brush faa-spin , submenus: { 笔记|知识: {path: /categories/笔记-知识/, fa: fa-bookmark }, 笔记|学术: {path: /categories/笔记-学术/, fa: fa-superscript}, 笔记|生活: {path: /categories/笔记-生活/, fa: fa-paw } } } 收藏: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 我的书单: {path: /book/, fa: fa-th-list }, 我的番组: {path: /bangumi/, fa: fa-film }, 我的歌单: {path: /music/, fa: fa-headphones }, 我的图集: {path: /picture/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-bounce } 赞赏: { path: /donate/, fa: fa-heart faa-burst } 关于: { path: javascript:;, fa: fa-leaf faa-falling , submenus: { 我的情报: {path: /about/, fa: fa-id-card}, 我的博客: {path: /theme-sakura/, fa: iconfont icon-sakura }, 统计信息: { path: /statistics/, fa: fa-bar-chart }, RSS订阅: { path: /atom.xml, fa: fa-rss } 注意到每个标签都可以设置图标和鼠标悬停动画，那么具体如何定制你自己需要的图标和动画呢？ Font Awesome 图标前往Font Awesome 图标选择你想使用的图标，点击后会展示具体的图标使用方法，这时只需要复制以fa开头的图标名称并粘贴在主题配置文件_config.yml菜单栏部分的fa:后即可。 Font Awesome 动画前往Font Awesome 动画选择你想使用的图标动画，将以faa开头的动画名称粘贴到图标名称后即可。 3 首页banner添加文字和邮件社交按钮banner添加文字Hexo版本的Sakura主题的首页banner中心是展示博客头像，如果你想修改成为WordPress版Sakura主题的Demo站那样的文字动画，那么就进行以下修改吧。 打开从博客更目录出发的themes/Sakura/layout/_partial/headertop.ejs文件，将其中约7-9行&lt;a href&quot;&lt;%- theme.url%&gt;&quot;&gt;...&lt;/a&gt;注释掉并在其上添加文字和样式，即： &lt;h1 class=&quot;center-text glitch is-glitching Ubuntu-font&quot; data-text=&quot;HI, TIANYU!&quot;&gt;HI, TIANYU!&lt;/h1&gt; &lt;!-- &lt;a href=&quot;&lt;%- theme.url%&gt;&quot;&gt; &lt;img src=&quot;&lt;%- (theme.cdn || &#39;&#39;) + theme.avatar %&gt;&quot;&gt; &lt;/a&gt; --&gt; 最后就可以获得如下效果了： 邮件社交按钮触发邮箱发送对于在主题配置文件中其他社交按钮的url配置起来很简单，但要使用邮箱按钮使其触发电脑上的邮件软件则需要在你的邮箱前加上mailto:： email: {url: mailto:cuitianyu961030@163.com, img: /img/social/email.svg} 4 首页notice添加自动格言如果你也觉得首页的notice没什么用处，那正好可以将它修改成可以刷新更换的自动格言。 进入从博客更目录出发的themes/Sakura/layout/index.ejs，查找&lt;%= theme.notice%&gt;，将其替换为以下内容： &lt;span id=&quot;hitokoto&quot; style=&quot;margin-left:5px;&quot;&gt; :D 获取中...&lt;/span&gt; &lt;p align=&quot;right&quot; id=&quot;afrom&quot;&gt;&lt;/p&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; fetch(&#39;https://v1.hitokoto.cn/?c=h&#39;) .then(function (res){ return res.json(); }) .then(function (data) { var hitokoto = document.getElementById(&#39;hitokoto&#39;); var afrom = document.getElementById(&#39;afrom&#39;); hitokoto.innerText = data.hitokoto; afrom.innerText = &#39;——【&#39; + data.from + &#39; &#39; + data.from_who + &#39;】&#39;; }) .catch(function (err) { console.error(err); }) &lt;/script&gt; 即可获得如下效果： 5 首页START:DASH!!和Discovery标题修改如果你想修改首页START:DASH!!和Discovery标题，分别前往从博客根目录出发的themes/Sakura/layout/_partial/startdash.ejs和themes/Sakura/layout/index.ejs并搜索START:DASH!!或Discovery以修改第5或第31行的h1标签内容，例如startdash.ejs中： &lt;div class=&quot;top-feature-row&quot;&gt; &lt;h1 class=&quot;fes-title&quot; style=&quot;font-family: &#39;Ubuntu&#39;, sans-serif;&quot;&gt; &lt;i class=&quot;fa fa-anchor&quot; aria-hidden=&quot;true&quot;&gt; &lt;/i&gt; Popular Articles&lt;/h1&gt; 结果展示如下： 6 底部footer的修改footer的修改可以在themes/Sakura/layout/_partial/index.ejs中完成，你可以搜索Powered by Hexo, Hosted by Coding Pages并在该条内容的p标签上下添加额外的p标签内容。例如以下添加赞助商logo的内容： &lt;p id=&quot;footer-sponsor&quot; style=&quot;margin: 1em 1em;&quot;&gt;&lt;a href=&quot;https://www.docker.com/&quot; target=&quot;_blank&quot; alt=&quot;Container&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;img/logo/docker.png&quot; alt=&quot;Docker&quot; style=&quot;height: 2em;&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; alt=&quot;Page provider&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;img/logo/Github.png&quot; alt=&quot;Github&quot; style=&quot;height: 2em;&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://www.jsdelivr.com/&quot; target=&quot;_blank&quot; alt=&quot;Free CDN&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;img/logo/JsDelivr_Logo.svg&quot; alt=&quot;jsDelivr&quot; style=&quot;height: 2em;&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; alt=&quot;Blog framework&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;img/logo/hexo.png&quot; alt=&quot;Hexo&quot; style=&quot;height: 1.5em; &quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://2heng.xin/theme-sakura/&quot; target=&quot;_blank&quot; alt=&quot;Theme&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;img/logo/mashiro-logo.png&quot; alt=&quot;Mashiro&quot; style=&quot;height: 2em;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 结果展示如下： 7 音乐播放器Aplayer修改歌单修改音乐播放器的歌单在主题配置文件_config.yml配置： aplayer: id: 2196947449 server: netease type: playlist fixed: true autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true 其中的id即访问你的网易云歌单页面时的url中的id值，例如https://music.163.com/#/playlist?id=2196947449。 样式修改你可以在从博客根目录出发的themes/Sakura/layout/_partial/aplayer.ejs修改底部滚动的歌词样式，例如颜色和歌词透明度： .aplayer .aplayer-lrc p.aplayer-lrc-current{ color: #F3A73B; } .aplayer.aplayer-fixed .lrc-show { display: block; background: rgba(255, 255, 255, 0.1); } 8 恢复切换主题背景功能该部分的前端展示在Hexo版本的Sakura主题被作者中删除了，但其js和css代码并未删除。若要恢复切换主题背景的功能，需在从博客根目录出发的themes/Sakura/layout/layout.ejs中的&lt;/body&gt;标签前添加以下内容： &lt;!-- 实现换肤功能 --&gt; &lt;%- partial(&#39;_partial/skin-list&#39;) %&gt; &lt;%- partial(&#39;_partial/skin-btn&#39;, null, {cache: !config.relative_link}) %&gt; &lt;%- partial(&#39;_partial/mheader&#39;, null, {cache: !config.relative_link}) %&gt; &lt;%- partial(&#39;_partial/aplayer&#39;, null, {cache: !config.relative_link}) %&gt; &lt;/body&gt; &lt;/html&gt; 随后在themes/Sakura/layout/_partial文件夹下依次新建skin-btn.ejs和skin-list.ejs，skin-btn.ejs的内容为： &lt;div class=&quot;changeSkin-gear no-select&quot;&gt; &lt;div class=&quot;keys&quot; id=&quot;setbtn&quot;&gt; &lt;span id=&quot;open-skinMenu&quot;&gt; 切换主题 | SCHEME TOOL &lt;i class=&quot;iconfont icon-gear inline-block rotating&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;/div&gt; &lt;/div&gt; skin-list.ejs的内容为： &lt;div class=&quot;skin-menu no-select&quot; id=&quot;mainskin&quot; style=&quot;position: fixed&quot;&gt; &lt;div class=&quot;theme-controls row-container&quot;&gt; &lt;ul class=&quot;menu-list&quot;&gt; &lt;li id=&quot;white-bg&quot;&gt; &lt;i class=&quot;fa fa-television&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;sakura-bg&quot;&gt; &lt;i class=&quot;iconfont icon-sakura&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;gribs-bg&quot;&gt; &lt;i class=&quot;fa fa-slack&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;KAdots-bg&quot;&gt; &lt;i class=&quot;iconfont icon-dots&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;totem-bg&quot;&gt; &lt;i class=&quot;fa fa-optin-monster&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;pixiv-bg&quot;&gt; &lt;i class=&quot;iconfont icon-pixiv&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;bing-bg&quot;&gt; &lt;i class=&quot;iconfont icon-bing&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;dark-bg&quot;&gt; &lt;i class=&quot;fa fa-moon-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;canvas id=&quot;night-mode-cover&quot;&gt;&lt;/canvas&gt; 随后你就可以在右下角得到前端切换背景的控制面板： 背景图片可以在themes/Sakura/source/js/sakura-app.js中更换，其位置为： changeBG(&#39;#sakura-bg&#39;, &#39;https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/themebg/sakura.png&#39;) changeBG(&#39;#gribs-bg&#39;, &#39;https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/themebg/plaid.jpg&#39;) changeBG(&#39;#pixiv-bg&#39;, &#39;https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/themebg/star.png&#39;) changeBG(&#39;#KAdots-bg&#39;, &#39;https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/themebg/point.png&#39;) changeBG(&#39;#totem-bg&#39;, &#39;https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/themebg/little-monster.png&#39;) changeBGnoTrans(&#39;#bing-bg&#39;, &#39;https://api.shino.cc/bing/&#39;) $(&#39;.skin-menu #white-bg&#39;).click(function () { mashiro_global.variables.skinSecter = false mashiro_global.variables.isNight = false $(&#39;#night-mode-cover&#39;).css(&#39;visibility&#39;, &#39;hidden&#39;) $(&#39;body&#39;).css(&#39;background-image&#39;, &#39;none&#39;) $(&#39;.blank&#39;).css(&#39;background-color&#39;, &#39;rgba(255,255,255,.0)&#39;) $(&#39;.pattern-center-sakura&#39;).removeClass(&#39;pattern-center-sakura&#39;).addClass(&#39;pattern-center&#39;) $(&#39;.headertop-bar-sakura&#39;).removeClass(&#39;headertop-bar-sakura&#39;).addClass(&#39;headertop-bar&#39;) $(&#39;#banner_wave_1&#39;).removeClass(&#39;banner_wave_hide_fit_skin&#39;) $(&#39;#banner_wave_2&#39;).removeClass(&#39;banner_wave_hide_fit_skin&#39;) closeSkinMenu() setCookie(&#39;bgImgSetting&#39;, &#39;&#39;, 30) }) $(&#39;.skin-menu #dark-bg&#39;).click(function () { mashiro_global.variables.skinSecter = true mashiro_global.variables.isNight = true $(&#39;body&#39;).css(&#39;background-image&#39;, &#39;url(https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/other/starry_sky.png)&#39;) $(&#39;.blank&#39;).css(&#39;background-color&#39;, &#39;rgba(255,255,255,.8)&#39;) $(&#39;#night-mode-cover&#39;).css(&#39;visibility&#39;, &#39;visible&#39;) $(&#39;.pattern-center&#39;).removeClass(&#39;pattern-center&#39;).addClass(&#39;pattern-center-sakura&#39;) $(&#39;.headertop-bar&#39;).removeClass(&#39;headertop-bar&#39;).addClass(&#39;headertop-bar-sakura&#39;) $(&#39;#banner_wave_1&#39;).addClass(&#39;banner_wave_hide_fit_skin&#39;) 替换其中所有图片的url即可完成更换。","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Sakura主题使用」Hexo-Sakura主题的安装和使用教程","slug":"Sakura-build-20200831","date":"2020-08-30T16:21:30.000Z","updated":"2020-09-09T14:45:17.002Z","comments":true,"path":"Sakura-build-20200831.html","link":"","permalink":"/Sakura-build-20200831.html","excerpt":"","text":"前言一款合适的博客主题将成为你的博客的灵魂，而Hexo平台下拥有超多的主题选择，足够我们挑选出自己心仪的选项。 选择Sakura主题是因为我被它在WordPress平台下拥有的超多动态的内容表现和元素布局所吸引。虽然这些元素对于博客来讲略显复杂，但是却能让你构建一个足以展现自己的个人网站。如果你更喜欢简洁大气的主题风格，你可以尝试Next等Hexo主题，但如果你拥有和我一样的情节，那么就大胆地选择Sakura主题来作为你的博客灵魂吧。 本篇文章节选自Mashiro大佬的Hexo-Theme-Sakura文档，并根据原文内容做了一定的调整。 1 主题部署前往Github下载Hexo-Sakura主题，将内容解压缩在博客根目录下并替换所有重名的文件，注意不是解压在主题目录下（如果你使用的是我前一篇文章推荐的Docker环境，则博客根目录应为/opt/hexo/ipple1986）。 替换完成后执行以下命令安装环境依赖： # npm i 注意你可能会遇到在某文件夹下缺少文件的错误，例如uglify-js，你会发现你可能在node_modules目录下根本未安装过这个库目录。你可以使用以下命令来完成uglify-js库文件的安装： # npm install uglify-js 之后再重新运行npm i命令即可完成环境安装了。 最后确保你的博客根目录下的配置文件_config.yml中主题选择Sakura： theme: Sakura 完成所有更改后在博客根目录下执行，即可完成主题的基本部署了: # hexo g 2 主题使用博客配置文件博客根目录下的_config.yml是博客的基本信息配置，需要修改的部分主要是站点信息以及部署和备份信息两部分。 站点信息配置，这将是在被搜索引擎检索时展现的基本信息： # Site title: 冬天的雨滴 Tianyu Cui&#39;s Blog subtitle: A Hexo blog site with Sakura themes deployed on the Docker images and Github pages. description: 写字楼里写字间，写字间里程序员；程序人员写程序，又拿程序换酒钱。这是一个记录了我在互联网道路上的成长的博客小站。 keywords: 计算机科学, 网络安全, 人工智能, Computer Sciences, Network Security, Artificial Intelligence author: Tianyu Cui language: zh-cn timezone: Asia/Shanghai 部署和备份信息配置，包括部署和备份的仓库地址配置，这将在使用hexo d和hexo b时定向你的部署和备份仓库： # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: # github: git@github.com:honjun/honjun.github.io.git github: https://github.com/cuitianyu961030/cuitianyu961030.github.io.git # coding: https://git.coding.net/hojun/hojun.git branch: master # backup backup: type: git message: backup my blog of https://cuitianyu961030.github.io/ repository: github: https://github.com/cuitianyu961030/cuitianyu961030.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题配置文件主题配置文件即为博客根目录中的theme/Sakura/目录下的_config.yml文件，这其中包含了更具体的主题配置内容，可以参照Hexo-Theme-Sakura文档进行自定义的修改，例如： # site name prefixName: Tianyu Cui #さくら荘その siteName: Tianyu Cui # favicon and site master avatar favicon: /img/custom/favicon.ico avatar: /img/custom/avatar.png url: https://github.com/cuitianyu961030 # https://sakura.hojun.cn description: Probably growing up and losing my former self. #Live your life with passion! With some drive! cdn: # https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 pjax: 1 # 1开启 mathjax: 0 其他文件修改法则其他每个页面的具体展现将具体由博客根目录下的source, theme/Sakura/layout, theme/Sakura/source/js, theme/Sakura/source/css来控制。其中前两个用来控制页面内容，而后两个主要是功能和美化的实现。需注意的是若source目录下的每个index.md文件中若存在layout选项，则更具体的修改可以在theme/Sakura/layout中的.ejs文件中完成，例如source/links/index.md的文件内容： --- layout: links title: Links date: 2018-12-19 23:11:06 keywords: 友人帐 description: comments: true photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg links: 则你可以前往theme/Sakura/layout/links.ejs中进行更多的修改和完善工作。 完成这些基本内容的配置，你就可以得到一款最原本的Hexo-Sakura主题博客了，你可以使用hexo g命令执行所有更改并在浏览器中输入http://localhost:4000/（4000是你配置的端口号）查看你的本地更改。 到这里你已经可以基本完成博客所必须的生产工作了，你也可以选择继续美化它以实现更多你想表现的内容。接下来的文章我也会介绍在Sakura主题下的每个页面所进行的具体美化和修改配置，如果到这里你还没有放弃，那就继续完成你的博客美化之路吧。","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]},{"title":"「Hexo博客搭建」Docker-Hexo搭建属于你自己的博客","slug":"Hexo-Docker-build-20200830","date":"2020-08-30T04:57:01.000Z","updated":"2020-09-09T14:59:55.143Z","comments":true,"path":"Hexo-Docker-build-20200830.html","link":"","permalink":"/Hexo-Docker-build-20200830.html","excerpt":"","text":"前言这是我的第一篇博客（亲手写的，不是Hexo的《Hello World》的真正的第一篇博客），那么在这个值得纪念的日子里，我就来描述下Docker+Hexo快速搭建博客的方法吧，好吧我承认一点仪式感都没有。。。 选择Docker来承载你的博客环境是因为它确实快速有效，省去了环境安装的不必要的麻烦。它将平常用不到的Node.js内置于容器中，使你能够获得一个只为博客写作的容器环境。并且日后移植博客只需要制作镜像来转移，非常的方便。 1 安装 Docker Desktop前往Docker的官方网站下载Docker Desktop。之后你可能需要注册一个Docker的账号，在启动Docker Desktop后，在小图标的下拉菜单栏中登陆你的账号。 2 使用 Docker Hub寻找Hexo镜像点击菜单栏中的Docker Hub, 或直接登陆网址 https://hub.docker.com/在其中搜索Hexo，寻找公开的Hexo环境的镜像。 镜像的下载和使用选择一个你中意的镜像，例如我使用的是ipple1986/hexo，这里也要感谢大佬的开源。 在终端Terminal或命令行使用以下命令下载Docker镜像： # docker pull ipple1986/hexo 下载完成后使用以下命令创建并运行你的Hexo容器： # docker run -d --name hexo-blog -p 4000:4000 ipple1986/hexo 其中hexo-blog是你要创建的容器名，4000:4000是容器和主机的端口映射，这里可以自己定义，要确保你的端口与其他进程不冲突。之后你也可以在Docker Desktop中的Dashboard中启动或停止你的容器。 到这里你的Hexo博客环境搭建已经基本完成了，你可以访问http://localhost:4000/ 查看你的博客, 4000是你之前映射的端口号。 之后你将可以使用以下命令进入你的博客容器进行博客写作： # docker exec -it some-hexo bash 一个快速的Docker-Hexo博客环境已经搭建完毕了，未来你可能需要选择一款心仪的Hexo主题，部署到Github Page，绑定自己的域名，以及一些杂七杂八的美化和优化方法。 如果你也有一颗敢于作死的心，那就继续完成你接下来的博客搭建之路吧。","categories":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"/tags/Docker/"},{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}],"keywords":[{"name":"技术|兴趣","slug":"技术-兴趣","permalink":"/categories/技术-兴趣/"}]}]}